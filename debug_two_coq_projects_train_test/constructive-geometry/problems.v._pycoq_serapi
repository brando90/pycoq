{"response": ["(Feedback((doc_id 0)(span_id 0)(route 0)(contents(FileLoaded Coq.Init.Prelude /home/bot/.opam/ocaml-variants.4.07.1+flambda_coq-serapi.8.11.0+0.11.1/lib/coq/theories/Init/Prelude.vo))))\n", "(Feedback((doc_id 0)(span_id 0)(route 0)(contents(FileLoaded Coq.Init.Notations /home/bot/.opam/ocaml-variants.4.07.1+flambda_coq-serapi.8.11.0+0.11.1/lib/coq/theories/Init/Notations.vo))))\n", "(Feedback((doc_id 0)(span_id 0)(route 0)(contents(FileLoaded Coq.Init.Logic /home/bot/.opam/ocaml-variants.4.07.1+flambda_coq-serapi.8.11.0+0.11.1/lib/coq/theories/Init/Logic.vo))))\n", "(Feedback((doc_id 0)(span_id 0)(route 0)(contents(FileLoaded Coq.Init.Datatypes /home/bot/.opam/ocaml-variants.4.07.1+flambda_coq-serapi.8.11.0+0.11.1/lib/coq/theories/Init/Datatypes.vo))))\n", "(Feedback((doc_id 0)(span_id 0)(route 0)(contents(FileLoaded Coq.Init.Logic_Type /home/bot/.opam/ocaml-variants.4.07.1+flambda_coq-serapi.8.11.0+0.11.1/lib/coq/theories/Init/Logic_Type.vo))))\n", "(Feedback((doc_id 0)(span_id 0)(route 0)(contents(FileLoaded Coq.Init.Specif /home/bot/.opam/ocaml-variants.4.07.1+flambda_coq-serapi.8.11.0+0.11.1/lib/coq/theories/Init/Specif.vo))))\n", "(Feedback((doc_id 0)(span_id 0)(route 0)(contents(FileLoaded Coq.Init.Decimal /home/bot/.opam/ocaml-variants.4.07.1+flambda_coq-serapi.8.11.0+0.11.1/lib/coq/theories/Init/Decimal.vo))))\n", "(Feedback((doc_id 0)(span_id 0)(route 0)(contents(FileLoaded Coq.Init.Nat /home/bot/.opam/ocaml-variants.4.07.1+flambda_coq-serapi.8.11.0+0.11.1/lib/coq/theories/Init/Nat.vo))))\n", "(Feedback((doc_id 0)(span_id 0)(route 0)(contents(FileLoaded Coq.Init.Byte /home/bot/.opam/ocaml-variants.4.07.1+flambda_coq-serapi.8.11.0+0.11.1/lib/coq/theories/Init/Byte.vo))))\n", "(Feedback((doc_id 0)(span_id 0)(route 0)(contents(FileLoaded Coq.Init.Peano /home/bot/.opam/ocaml-variants.4.07.1+flambda_coq-serapi.8.11.0+0.11.1/lib/coq/theories/Init/Peano.vo))))\n", "(Feedback((doc_id 0)(span_id 0)(route 0)(contents(FileLoaded Coq.Init.Wf /home/bot/.opam/ocaml-variants.4.07.1+flambda_coq-serapi.8.11.0+0.11.1/lib/coq/theories/Init/Wf.vo))))\n", "(Feedback((doc_id 0)(span_id 0)(route 0)(contents(FileLoaded Coq.Init.Tactics /home/bot/.opam/ocaml-variants.4.07.1+flambda_coq-serapi.8.11.0+0.11.1/lib/coq/theories/Init/Tactics.vo))))\n", "(Feedback((doc_id 0)(span_id 0)(route 0)(contents(FileLoaded Coq.Init.Tauto /home/bot/.opam/ocaml-variants.4.07.1+flambda_coq-serapi.8.11.0+0.11.1/lib/coq/theories/Init/Tauto.vo))))\n", "(Feedback((doc_id 0)(span_id 1)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 1)(route 0)(contents Processed)))\n", "(Answer 0 Ack)\n", "(Feedback((doc_id 0)(span_id 2)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 1)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 2)(route 0)(contents(FileLoaded ConstructiveGeometry.basis /home/bot/proverbot9001/coq-projects/constructive-geometry/basis.vo))))\n", "(Feedback((doc_id 0)(span_id 2)(route 0)(contents Processed)))\n", "(Answer 0(Added 2((fname ToplevelInput)(line_nb 25)(bol_pos 1421)(line_nb_last 25)(bol_pos_last 1421)(bp 1421)(ep 1442))NewTip))\n", "(Answer 0 Completed)\n", "(Answer 1 Ack)\n", "(Feedback((doc_id 0)(span_id 2)(route 0)(contents Processed)))\n", "(Answer 1 Completed)\n", "(Answer 2 Ack)\n", "(Answer 2(ObjList()))\n", "(Answer 2 Completed)\n", "(Answer 3 Ack)\n", "(Answer 3(ObjList()))\n", "(Answer 3 Completed)\n", "(Answer 4 Ack)\n", "(Feedback((doc_id 0)(span_id 3)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 2)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 3)(route 0)(contents(FileLoaded ConstructiveGeometry.part1 /home/bot/proverbot9001/coq-projects/constructive-geometry/part1.vo))))\n", "(Feedback((doc_id 0)(span_id 3)(route 0)(contents Processed)))\n", "(Answer 4(Added 3((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 21))NewTip))\n", "(Answer 4 Completed)\n", "(Answer 5 Ack)\n", "(Feedback((doc_id 0)(span_id 3)(route 0)(contents Processed)))\n", "(Answer 5 Completed)\n", "(Answer 6 Ack)\n", "(Answer 6(ObjList()))\n", "(Answer 6 Completed)\n", "(Answer 7 Ack)\n", "(Answer 7(ObjList()))\n", "(Answer 7 Completed)\n", "(Answer 8 Ack)\n", "(Feedback((doc_id 0)(span_id 4)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 3)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 4)(route 0)(contents(FileLoaded ConstructiveGeometry.part2 /home/bot/proverbot9001/coq-projects/constructive-geometry/part2.vo))))\n", "(Feedback((doc_id 0)(span_id 4)(route 0)(contents Processed)))\n", "(Answer 8(Added 4((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 21))NewTip))\n", "(Answer 8 Completed)\n", "(Answer 9 Ack)\n", "(Feedback((doc_id 0)(span_id 4)(route 0)(contents Processed)))\n", "(Answer 9 Completed)\n", "(Answer 10 Ack)\n", "(Answer 10(ObjList()))\n", "(Answer 10 Completed)\n", "(Answer 11 Ack)\n", "(Answer 11(ObjList()))\n", "(Answer 11 Completed)\n", "(Answer 12 Ack)\n", "(Feedback((doc_id 0)(span_id 5)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 4)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 5)(route 0)(contents(FileLoaded ConstructiveGeometry.part3 /home/bot/proverbot9001/coq-projects/constructive-geometry/part3.vo))))\n", "(Feedback((doc_id 0)(span_id 5)(route 0)(contents Processed)))\n", "(Answer 12(Added 5((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 21))NewTip))\n", "(Answer 12 Completed)\n", "(Answer 13 Ack)\n", "(Feedback((doc_id 0)(span_id 5)(route 0)(contents Processed)))\n", "(Answer 13 Completed)\n", "(Answer 14 Ack)\n", "(Answer 14(ObjList()))\n", "(Answer 14 Completed)\n", "(Answer 15 Ack)\n", "(Answer 15(ObjList()))\n", "(Answer 15 Completed)\n", "(Answer 16 Ack)\n", "(Feedback((doc_id 0)(span_id 6)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 5)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 6)(route 0)(contents(FileLoaded ConstructiveGeometry.affinity /home/bot/proverbot9001/coq-projects/constructive-geometry/affinity.vo))))\n", "(Feedback((doc_id 0)(span_id 6)(route 0)(contents Processed)))\n", "(Answer 16(Added 6((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 24))NewTip))\n", "(Answer 16 Completed)\n", "(Answer 17 Ack)\n", "(Feedback((doc_id 0)(span_id 6)(route 0)(contents Processed)))\n", "(Answer 17 Completed)\n", "(Answer 18 Ack)\n", "(Answer 18(ObjList()))\n", "(Answer 18 Completed)\n", "(Answer 19 Ack)\n", "(Answer 19(ObjList()))\n", "(Answer 19 Completed)\n", "(Answer 20 Ack)\n", "(Feedback((doc_id 0)(span_id 7)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 6)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 7)(route 0)(contents(FileLoaded ConstructiveGeometry.orthogonality /home/bot/proverbot9001/coq-projects/constructive-geometry/orthogonality.vo))))\n", "(Feedback((doc_id 0)(span_id 7)(route 0)(contents Processed)))\n", "(Answer 20(Added 7((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 29))NewTip))\n", "(Answer 20 Completed)\n", "(Answer 21 Ack)\n", "(Feedback((doc_id 0)(span_id 7)(route 0)(contents Processed)))\n", "(Answer 21 Completed)\n", "(Answer 22 Ack)\n", "(Answer 22(ObjList()))\n", "(Answer 22 Completed)\n", "(Answer 23 Ack)\n", "(Answer 23(ObjList()))\n", "(Answer 23 Completed)\n", "(Answer 24 Ack)\n", "(Answer 24(Added 8((fname ToplevelInput)(line_nb 2)(bol_pos 1)(line_nb_last 3)(bol_pos_last 17)(bp 1)(ep 84))NewTip))\n", "(Answer 24 Completed)\n", "(Answer 25 Ack)\n", "(Feedback((doc_id 0)(span_id 8)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 7)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 8)(route 0)(contents Processed)))\n", "(Answer 25 Completed)\n", "(Answer 26 Ack)\n", "(Answer 26(ObjList((CoqString\"none\\n============================\\nPoint ->\\n                             forall l : Line,\\n                             exists b : Point, Incident b l\"))))\n", "(Answer 26 Completed)\n", "(Answer 27 Ack)\n", "(Answer 27(ObjList((CoqString\"none\\n============================\\nPoint ->\\n                             forall l : Line,\\n                             exists b : Point, Incident b l\"))))\n", "(Answer 27 Completed)\n", "(Answer 28 Ack)\n", "(Answer 28(ObjList((CoqString\"none\\n============================\\nPoint ->\\n                             forall l : Line,\\n                             exists b : Point, Incident b l\"))))\n", "(Answer 28 Completed)\n", "(Answer 29 Ack)\n", "(Answer 29(Added 9((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 11))NewTip))\n", "(Answer 29 Completed)\n", "(Answer 30 Ack)\n", "(Feedback((doc_id 0)(span_id 9)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 8)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 9)(route 0)(contents(Message(level Notice)(loc())(pp(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal))))))(str ?Goal)))))\n", "(Feedback((doc_id 0)(span_id 9)(route 0)(contents Processed)))\n", "(Answer 30 Completed)\n", "(Answer 31 Ack)\n", "(Answer 31(Added 10((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 6))NewTip))\n", "(Answer 31 Completed)\n", "(Answer 32 Ack)\n", "(Feedback((doc_id 0)(span_id 10)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 9)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 10)(route 0)(contents Processed)))\n", "(Answer 32 Completed)\n", "(Answer 33 Ack)\n", "(Answer 33(ObjList((CoqString\"none\\n============================\\nPoint ->\\n                             forall l : Line,\\n                             exists b : Point, Incident b l\"))))\n", "(Answer 33 Completed)\n", "(Answer 34 Ack)\n", "(Answer 34(ObjList((CoqString\"none\\n============================\\nPoint ->\\n                             forall l : Line,\\n                             exists b : Point, Incident b l\"))))\n", "(Answer 34 Completed)\n", "(Answer 35 Ack)\n", "(Answer 35(ObjList((CoqString\"none\\n============================\\nPoint ->\\n                             forall l : Line,\\n                             exists b : Point, Incident b l\"))))\n", "(Answer 35 Completed)\n", "(Answer 36 Ack)\n", "(Answer 36(Added 11((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 11))NewTip))\n", "(Answer 36 Completed)\n", "(Answer 37 Ack)\n", "(Feedback((doc_id 0)(span_id 11)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 10)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 11)(route 0)(contents(Message(level Notice)(loc())(pp(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal))))))(str ?Goal)))))\n", "(Feedback((doc_id 0)(span_id 11)(route 0)(contents Processed)))\n", "(Answer 37 Completed)\n", "(Answer 38 Ack)\n", "(Answer 38(Added 12((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 11))NewTip))\n", "(Answer 38 Completed)\n", "(Answer 39 Ack)\n", "(Feedback((doc_id 0)(span_id 12)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 11)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 12)(route 0)(contents Processed)))\n", "(Answer 39 Completed)\n", "(Answer 40 Ack)\n", "(Answer 40(ObjList((CoqString\"\\n  l : Line\\n  a : Point\\n============================\\nexists b : Point, Incident b l\"))))\n", "(Answer 40 Completed)\n", "(Answer 41 Ack)\n", "(Answer 41(ObjList((CoqString\"\\n  l : Line\\n  a : Point\\n============================\\nexists b : Point, Incident b l\"))))\n", "(Answer 41 Completed)\n", "(Answer 42 Ack)\n", "(Answer 42(ObjList((CoqString\"\\n  l : Line\\n  a : Point\\n============================\\nexists b : Point, Incident b l\"))))\n", "(Answer 42 Completed)\n", "(Answer 43 Ack)\n", "(Answer 43(Added 13((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 11))NewTip))\n", "(Answer 43 Completed)\n", "(Answer 44 Ack)\n", "(Feedback((doc_id 0)(span_id 13)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 12)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 13)(route 0)(contents(Message(level Notice)(loc())(pp(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(a : \")(Pp_tag constr.variable(Pp_string Point))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(l : \")(Pp_tag constr.variable(Pp_string Line))(Pp_string\")\")))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal))))))))(Pp_string\")\")))))(str\"(fun (a : Point) (l : Line) => ?Goal)\")))))\n", "(Feedback((doc_id 0)(span_id 13)(route 0)(contents Processed)))\n", "(Answer 44 Completed)\n", "(Answer 45 Ack)\n", "(Answer 45(Added 14((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 32))NewTip))\n", "(Answer 45 Completed)\n", "(Answer 46 Ack)\n", "(Feedback((doc_id 0)(span_id 14)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 13)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 14)(route 0)(contents Processed)))\n", "(Answer 46 Completed)\n", "(Answer 47 Ack)\n", "(Answer 47(ObjList((CoqString\"\\n  H' : Ort (ort l a) l\\n  l : Line\\n  a : Point\\n============================\\nexists b : Point, Incident b l\"))))\n", "(Answer 47 Completed)\n", "(Answer 48 Ack)\n", "(Answer 48(ObjList((CoqString\"\\n  H' : Ort (ort l a) l\\n  l : Line\\n  a : Point\\n============================\\nexists b : Point, Incident b l\"))))\n", "(Answer 48 Completed)\n", "(Answer 49 Ack)\n", "(Answer 49(ObjList((CoqString\"\\n  H' : Ort (ort l a) l\\n  l : Line\\n  a : Point\\n============================\\nexists b : Point, Incident b l\"))))\n", "(Answer 49 Completed)\n", "(Answer 50 Ack)\n", "(Answer 50(Added 15((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 11))NewTip))\n", "(Answer 50 Completed)\n", "(Answer 51 Ack)\n", "(Feedback((doc_id 0)(span_id 15)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 14)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 15)(route 0)(contents(Message(level Notice)(loc())(pp(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(a : \")(Pp_tag constr.variable(Pp_string Point))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(l : \")(Pp_tag constr.variable(Pp_string Line))(Pp_string\")\")))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"H' : \")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Ort))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ort))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string a)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l)))))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string O3_i))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string a)))))(Pp_string\")\"))))))))))(Pp_string\")\")))))(str\"(fun (a : Point) (l : Line) => (fun H' : Ort (ort l a) l => ?Goal) (O3_i l a))\")))))\n", "(Feedback((doc_id 0)(span_id 15)(route 0)(contents Processed)))\n", "(Answer 51 Completed)\n", "(Answer 52 Ack)\n", "(Answer 52(Added 16((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 33))NewTip))\n", "(Answer 52 Completed)\n", "(Answer 53 Ack)\n", "(Feedback((doc_id 0)(span_id 16)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 15)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 16)(route 0)(contents Processed)))\n", "(Answer 53 Completed)\n", "(Answer 54 Ack)\n", "(Answer 54(ObjList((CoqString\"\\n  H'2 : ConLn (ort l a) l\\n  H' : Ort (ort l a) l\\n  l : Line\\n  a : Point\\n============================\\nexists b : Point, Incident b l\\n\\n  H'2 : Unort (ort l a) l\\n  H' : Ort (ort l a) l\\n  l : Line\\n  a : Point\\n============================\\nexists b : Point, Incident b l\"))))\n", "(Answer 54 Completed)\n", "(Answer 55 Ack)\n", "(Answer 55(ObjList((CoqString\"\\n  H'2 : ConLn (ort l a) l\\n  H' : Ort (ort l a) l\\n  l : Line\\n  a : Point\\n============================\\nexists b : Point, Incident b l\\n\\n  H'2 : Unort (ort l a) l\\n  H' : Ort (ort l a) l\\n  l : Line\\n  a : Point\\n============================\\nexists b : Point, Incident b l\"))))\n", "(Answer 55 Completed)\n", "(Answer 56 Ack)\n", "(Answer 56(ObjList((CoqString\"\\n  H'2 : ConLn (ort l a) l\\n  H' : Ort (ort l a) l\\n  l : Line\\n  a : Point\\n============================\\nexists b : Point, Incident b l\\n\\n  H'2 : Unort (ort l a) l\\n  H' : Ort (ort l a) l\\n  l : Line\\n  a : Point\\n============================\\nexists b : Point, Incident b l\"))))\n", "(Answer 56 Completed)\n", "(Answer 57 Ack)\n", "(Answer 57(Added 17((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 11))NewTip))\n", "(Answer 57 Completed)\n", "(Answer 58 Ack)\n", "(Feedback((doc_id 0)(span_id 17)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 16)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 17)(route 0)(contents(Message(level Notice)(loc())(pp(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(a : \")(Pp_tag constr.variable(Pp_string Point))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(l : \")(Pp_tag constr.variable(Pp_string Line))(Pp_string\")\")))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"H' : \")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Ort))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ort))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string a)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l)))))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string or_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"H'2 : \")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ConLn))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ort))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string a)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l)))))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"H'2 : \")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Unort))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ort))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string a)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l)))))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal0))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string O1))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ort))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string a)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l)))))(Pp_string\")\"))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string O3_i))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string a)))))(Pp_string\")\"))))))))))(Pp_string\")\")))))(str\"(fun (a : Point) (l : Line) =>\\n (fun H' : Ort (ort l a) l =>\\n  or_ind (fun H'2 : ConLn (ort l a) l => ?Goal)\\n    (fun H'2 : Unort (ort l a) l => ?Goal0) (O1 (ort l a) l)) \\n   (O3_i l a))\")))))\n", "(Feedback((doc_id 0)(span_id 17)(route 0)(contents Processed)))\n", "(Answer 58 Completed)\n", "(Answer 59 Ack)\n", "(Answer 59(Added 18((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 35))NewTip))\n", "(Answer 59 Completed)\n", "(Answer 60 Ack)\n", "(Feedback((doc_id 0)(span_id 18)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 17)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 18)(route 0)(contents Processed)))\n", "(Answer 60 Completed)\n", "(Answer 61 Ack)\n", "(Answer 61(ObjList((CoqString\"\\n  H'2 : ConLn (ort l a) l\\n  H' : Ort (ort l a) l\\n  l : Line\\n  a : Point\\n============================\\nIncident\\n                               (pt\\n                                  {|\\n                                  line1 := ort l a;\\n                                  line2 := l;\\n                                  Twol_cond := H'2 |}) l\\n\\n  H'2 : Unort (ort l a) l\\n  H' : Ort (ort l a) l\\n  l : Line\\n  a : Point\\n============================\\nexists b : Point, Incident b l\"))))\n", "(Answer 61 Completed)\n", "(Answer 62 Ack)\n", "(Answer 62(ObjList((CoqString\"\\n  H'2 : ConLn (ort l a) l\\n  H' : Ort (ort l a) l\\n  l : Line\\n  a : Point\\n============================\\nIncident\\n                               (pt\\n                                  {|\\n                                  line1 := ort l a;\\n                                  line2 := l;\\n                                  Twol_cond := H'2 |}) l\\n\\n  H'2 : Unort (ort l a) l\\n  H' : Ort (ort l a) l\\n  l : Line\\n  a : Point\\n============================\\nexists b : Point, Incident b l\"))))\n", "(Answer 62 Completed)\n", "(Answer 63 Ack)\n", "(Answer 63(ObjList((CoqString\"\\n  H'2 : ConLn (ort l a) l\\n  H' : Ort (ort l a) l\\n  l : Line\\n  a : Point\\n============================\\nIncident\\n                               (pt\\n                                  {|\\n                                  line1 := ort l a;\\n                                  line2 := l;\\n                                  Twol_cond := H'2 |}) l\\n\\n  H'2 : Unort (ort l a) l\\n  H' : Ort (ort l a) l\\n  l : Line\\n  a : Point\\n============================\\nexists b : Point, Incident b l\"))))\n", "(Answer 63 Completed)\n", "(Answer 64 Ack)\n", "(Answer 64(Added 19((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 11))NewTip))\n", "(Answer 64 Completed)\n", "(Answer 65 Ack)\n", "(Feedback((doc_id 0)(span_id 19)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 18)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 19)(route 0)(contents(Message(level Notice)(loc())(pp(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(a : \")(Pp_tag constr.variable(Pp_string Point))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(l : \")(Pp_tag constr.variable(Pp_string Line))(Pp_string\")\")))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"H' : \")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Ort))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ort))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string a)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l)))))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string or_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"H'2 : \")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ConLn))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ort))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string a)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l)))))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ex_intro))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"b : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Incident))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string b))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string pt))(Pp_print_break 1 0)(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string line1))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ort))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string a))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string line2))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string Twol_cond))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string\"H'2\")))))(Pp_string\" |}\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal0)))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"H'2 : \")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Unort))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ort))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string a)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l)))))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string O1))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ort))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string a)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l)))))(Pp_string\")\"))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string O3_i))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string a)))))(Pp_string\")\"))))))))))(Pp_string\")\")))))(str\"(fun (a : Point) (l : Line) =>\\n (fun H' : Ort (ort l a) l =>\\n  or_ind\\n    (fun H'2 : ConLn (ort l a) l =>\\n     ex_intro (fun b : Point => Incident b l)\\n       (pt {| line1 := ort l a; line2 := l; Twol_cond := H'2 |}) \\n       ?Goal0) (fun H'2 : Unort (ort l a) l => ?Goal) \\n    (O1 (ort l a) l)) (O3_i l a))\")))))\n", "(Feedback((doc_id 0)(span_id 19)(route 0)(contents Processed)))\n", "(Answer 65 Completed)\n", "(Answer 66 Ack)\n", "(Answer 66(Added 20((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 39))NewTip))\n", "(Answer 66 Completed)\n", "(Answer 67 Ack)\n", "(Feedback((doc_id 0)(span_id 20)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 19)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 20)(route 0)(contents Processed)))\n", "(Answer 67 Completed)\n", "(Answer 68 Ack)\n", "(Answer 68(ObjList((CoqString\"\\n  H'2 : Unort (ort l a) l\\n  H' : Ort (ort l a) l\\n  l : Line\\n  a : Point\\n============================\\nexists b : Point, Incident b l\"))))\n", "(Answer 68 Completed)\n", "(Answer 69 Ack)\n", "(Answer 69(ObjList((CoqString\"\\n  H'2 : Unort (ort l a) l\\n  H' : Ort (ort l a) l\\n  l : Line\\n  a : Point\\n============================\\nexists b : Point, Incident b l\"))))\n", "(Answer 69 Completed)\n", "(Answer 70 Ack)\n", "(Answer 70(ObjList((CoqString\"\\n  H'2 : Unort (ort l a) l\\n  H' : Ort (ort l a) l\\n  l : Line\\n  a : Point\\n============================\\nexists b : Point, Incident b l\"))))\n", "(Answer 70 Completed)\n", "(Answer 71 Ack)\n", "(Answer 71(Added 21((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 11))NewTip))\n", "(Answer 71 Completed)\n", "(Answer 72 Ack)\n", "(Feedback((doc_id 0)(span_id 21)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 20)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 21)(route 0)(contents(Message(level Notice)(loc())(pp(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(a : \")(Pp_tag constr.variable(Pp_string Point))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(l : \")(Pp_tag constr.variable(Pp_string Line))(Pp_string\")\")))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"H' : \")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Ort))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ort))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string a)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l)))))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string or_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"H'2 : \")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ConLn))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ort))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string a)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l)))))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ex_intro))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"b : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Incident))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string b))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string pt))(Pp_print_break 1 0)(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string line1))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ort))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string a))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string line2))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string Twol_cond))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string\"H'2\")))))(Pp_string\" |}\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string inc_pt2))(Pp_print_break 1 0)(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string line1))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ort))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string a))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string line2))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string Twol_cond))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string\"H'2\")))))(Pp_string\" |}\")))))))(Pp_string\")\"))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"H'2 : \")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Unort))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ort))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string a)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l)))))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string O1))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ort))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string a)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l)))))(Pp_string\")\"))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string O3_i))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string a)))))(Pp_string\")\"))))))))))(Pp_string\")\")))))(str\"(fun (a : Point) (l : Line) =>\\n (fun H' : Ort (ort l a) l =>\\n  or_ind\\n    (fun H'2 : ConLn (ort l a) l =>\\n     ex_intro (fun b : Point => Incident b l)\\n       (pt {| line1 := ort l a; line2 := l; Twol_cond := H'2 |})\\n       (inc_pt2 {| line1 := ort l a; line2 := l; Twol_cond := H'2 |}))\\n    (fun H'2 : Unort (ort l a) l => ?Goal) (O1 (ort l a) l)) \\n   (O3_i l a))\")))))\n", "(Feedback((doc_id 0)(span_id 21)(route 0)(contents Processed)))\n", "(Answer 72 Completed)\n", "(Answer 73 Ack)\n", "(Answer 73(Added 22((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 14))NewTip))\n", "(Answer 73 Completed)\n", "(Answer 74 Ack)\n", "(Feedback((doc_id 0)(span_id 22)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 21)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 22)(route 0)(contents Processed)))\n", "(Answer 74 Completed)\n", "(Answer 75 Ack)\n", "(Answer 75(ObjList((CoqString\"\"))))\n", "(Answer 75 Completed)\n", "(Answer 76 Ack)\n", "(Answer 76(ObjList((CoqString\"\"))))\n", "(Answer 76 Completed)\n", "(Answer 77 Ack)\n", "(Answer 77(ObjList((CoqString\"\"))))\n", "(Answer 77 Completed)\n", "(Answer 78 Ack)\n", "(Answer 78(Added 23((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 11))NewTip))\n", "(Answer 78 Completed)\n", "(Answer 79 Ack)\n", "(Feedback((doc_id 0)(span_id 23)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 22)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 23)(route 0)(contents(Message(level Notice)(loc())(pp(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(a : \")(Pp_tag constr.variable(Pp_string Point))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(l : \")(Pp_tag constr.variable(Pp_string Line))(Pp_string\")\")))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"H' : \")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Ort))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ort))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string a)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l)))))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string or_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"H'2 : \")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ConLn))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ort))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string a)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l)))))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ex_intro))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"b : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Incident))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string b))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string pt))(Pp_print_break 1 0)(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string line1))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ort))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string a))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string line2))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string Twol_cond))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string\"H'2\")))))(Pp_string\" |}\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string inc_pt2))(Pp_print_break 1 0)(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string line1))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ort))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string a))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string line2))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string Twol_cond))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string\"H'2\")))))(Pp_string\" |}\")))))))(Pp_string\")\"))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"H'2 : \")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Unort))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ort))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string a)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l)))))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string False_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.notation(Pp_string exists))(Pp_print_break 1 2)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"b : \")(Pp_tag constr.variable(Pp_string Point)))))(Pp_tag constr.notation(Pp_string\",\"))(Pp_print_break 1 2)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Incident))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string b))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string\"H'\"))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string\"H'2\")))))(Pp_string\")\"))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string O1))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ort))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string a)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l)))))(Pp_string\")\"))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string O3_i))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string l))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string a)))))(Pp_string\")\"))))))))))(Pp_string\")\")))))(str\"(fun (a : Point) (l : Line) =>\\n (fun H' : Ort (ort l a) l =>\\n  or_ind\\n    (fun H'2 : ConLn (ort l a) l =>\\n     ex_intro (fun b : Point => Incident b l)\\n       (pt {| line1 := ort l a; line2 := l; Twol_cond := H'2 |})\\n       (inc_pt2 {| line1 := ort l a; line2 := l; Twol_cond := H'2 |}))\\n    (fun H'2 : Unort (ort l a) l =>\\n     False_ind (exists b : Point, Incident b l) (H' H'2)) \\n    (O1 (ort l a) l)) (O3_i l a))\")))))\n", "(Feedback((doc_id 0)(span_id 23)(route 0)(contents Processed)))\n", "(Answer 79 Completed)\n", "(Answer 80 Ack)\n", "(Answer 80(Added 24((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 4))NewTip))\n", "(Answer 80 Completed)\n", "(Answer 81 Ack)\n", "(Feedback((doc_id 0)(span_id 24)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 23)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 8)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 24)(route 0)(contents Processed)))\n", "(Answer 81 Completed)\n", "(Answer 82 Ack)\n", "(Answer 82(ObjList()))\n", "(Answer 82 Completed)\n", "(Answer 83 Ack)\n", "(Answer 83(ObjList()))\n", "(Answer 83 Completed)\n", "(Answer 84 Ack)\n", "(Answer 84(Added 25((fname ToplevelInput)(line_nb 2)(bol_pos 1)(line_nb_last 2)(bol_pos_last 1)(bp 1)(ep 25))NewTip))\n", "(Answer 84 Completed)\n", "(Answer 85 Ack)\n", "(Feedback((doc_id 0)(span_id 25)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 24)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 25)(route 0)(contents Processed)))\n", "(Answer 85 Completed)\n", "(Answer 86 Ack)\n", "(Answer 86(ObjList()))\n", "(Answer 86 Completed)\n", "(Answer 87 Ack)\n", "(Answer 87(ObjList()))\n", "(Answer 87 Completed)\n", "(Answer 88 Ack)\n", "(Answer 88(Added 26((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 22))NewTip))\n", "(Answer 88 Completed)\n", "(Answer 89 Ack)\n", "(Feedback((doc_id 0)(span_id 26)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 25)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 26)(route 0)(contents Processed)))\n", "(Answer 89 Completed)\n", "(Answer 90 Ack)\n", "(Answer 90(ObjList()))\n", "(Answer 90 Completed)\n", "(Answer 91 Ack)\n", "(Answer 91(ObjList()))\n", "(Answer 91 Completed)\n", "(Answer 92 Ack)\n", "(Answer 92(Added 27((fname ToplevelInput)(line_nb 2)(bol_pos 1)(line_nb_last 2)(bol_pos_last 1)(bp 1)(ep 27))NewTip))\n", "(Answer 92 Completed)\n", "(Answer 93 Ack)\n", "(Feedback((doc_id 0)(span_id 27)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 26)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 27)(route 0)(contents Processed)))\n", "(Answer 93 Completed)\n", "(Answer 94 Ack)\n", "(Answer 94(ObjList()))\n", "(Answer 94 Completed)\n", "(Answer 95 Ack)\n", "(Answer 95(ObjList()))\n", "(Answer 95 Completed)\n", "(Answer 96 Ack)\n", "(Answer 96(Added 28((fname ToplevelInput)(line_nb 2)(bol_pos 1)(line_nb_last 2)(bol_pos_last 1)(bp 1)(ep 34))NewTip))\n", "(Answer 96 Completed)\n", "(Answer 97 Ack)\n", "(Feedback((doc_id 0)(span_id 28)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 27)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 28)(route 0)(contents Processed)))\n", "(Answer 97 Completed)\n", "(Answer 98 Ack)\n", "(Answer 98(ObjList()))\n", "(Answer 98 Completed)\n", "(Answer 99 Ack)\n", "(Answer 99(ObjList()))\n", "(Answer 99 Completed)\n", "(Answer 100 Ack)\n", "(Answer 100(Added 29((fname ToplevelInput)(line_nb 2)(bol_pos 1)(line_nb_last 2)(bol_pos_last 1)(bp 1)(ep 37))NewTip))\n", "(Answer 100 Completed)\n", "(Answer 101 Ack)\n", "(Feedback((doc_id 0)(span_id 29)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 28)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 29)(route 0)(contents Processed)))\n", "(Answer 101 Completed)\n", "(Answer 102 Ack)\n", "(Answer 102(ObjList()))\n", "(Answer 102 Completed)\n", "(Answer 103 Ack)\n", "(Answer 103(ObjList()))\n", "(Answer 103 Completed)\n", "(Answer 104 Ack)\n", "(Answer 104(Added 30((fname ToplevelInput)(line_nb 2)(bol_pos 1)(line_nb_last 2)(bol_pos_last 1)(bp 1)(ep 32))NewTip))\n", "(Answer 104 Completed)\n", "(Answer 105 Ack)\n", "(Feedback((doc_id 0)(span_id 30)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 29)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 30)(route 0)(contents Processed)))\n", "(Answer 105 Completed)\n", "(Answer 106 Ack)\n", "(Answer 106(ObjList()))\n", "(Answer 106 Completed)\n", "(Answer 107 Ack)\n", "(Answer 107(ObjList()))\n", "(Answer 107 Completed)\n", "(Answer 108 Ack)\n", "(Answer 108(Added 31((fname ToplevelInput)(line_nb 2)(bol_pos 1)(line_nb_last 2)(bol_pos_last 1)(bp 1)(ep 31))NewTip))\n", "(Answer 108 Completed)\n", "(Answer 109 Ack)\n", "(Feedback((doc_id 0)(span_id 31)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 30)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 31)(route 0)(contents Processed)))\n", "(Answer 109 Completed)\n", "(Answer 110 Ack)\n", "(Answer 110(ObjList()))\n", "(Answer 110 Completed)\n", "(Answer 111 Ack)\n", "(Answer 111(ObjList()))\n", "(Answer 111 Completed)\n", "(Answer 112 Ack)\n", "(Answer 112(Added 32((fname ToplevelInput)(line_nb 2)(bol_pos 1)(line_nb_last 2)(bol_pos_last 1)(bp 1)(ep 31))NewTip))\n", "(Answer 112 Completed)\n", "(Answer 113 Ack)\n", "(Feedback((doc_id 0)(span_id 32)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 31)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 32)(route 0)(contents Processed)))\n", "(Answer 113 Completed)\n", "(Answer 114 Ack)\n", "(Answer 114(ObjList()))\n", "(Answer 114 Completed)\n", "(Answer 115 Ack)\n", "(Answer 115(ObjList()))\n", "(Answer 115 Completed)\n", "(Answer 116 Ack)\n", "(Answer 116(Added 33((fname ToplevelInput)(line_nb 2)(bol_pos 1)(line_nb_last 2)(bol_pos_last 1)(bp 1)(ep 29))NewTip))\n", "(Answer 116 Completed)\n", "(Answer 117 Ack)\n", "(Feedback((doc_id 0)(span_id 33)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 32)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 33)(route 0)(contents Processed)))\n", "(Answer 117 Completed)\n", "(Answer 118 Ack)\n", "(Answer 118(ObjList()))\n", "(Answer 118 Completed)\n", "(Answer 119 Ack)\n", "(Answer 119(ObjList()))\n", "(Answer 119 Completed)\n", "(Answer 120 Ack)\n", "(Answer 120(Added 34((fname ToplevelInput)(line_nb 2)(bol_pos 1)(line_nb_last 2)(bol_pos_last 1)(bp 1)(ep 27))NewTip))\n", "(Answer 120 Completed)\n", "(Answer 121 Ack)\n", "(Feedback((doc_id 0)(span_id 34)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 33)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 34)(route 0)(contents Processed)))\n", "(Answer 121 Completed)\n", "(Answer 122 Ack)\n", "(Answer 122(ObjList()))\n", "(Answer 122 Completed)\n", "(Answer 123 Ack)\n", "(Answer 123(ObjList()))\n", "(Answer 123 Completed)\n", "(Answer 124 Ack)\n", "(Answer 124(Added 35((fname ToplevelInput)(line_nb 2)(bol_pos 1)(line_nb_last 2)(bol_pos_last 1)(bp 1)(ep 28))NewTip))\n", "(Answer 124 Completed)\n", "(Answer 125 Ack)\n", "(Feedback((doc_id 0)(span_id 35)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 34)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 35)(route 0)(contents Processed)))\n", "(Answer 125 Completed)\n", "(Answer 126 Ack)\n", "(Answer 126(ObjList((CoqString\"\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nConLn Base L1\"))))\n", "(Answer 126 Completed)\n", "(Answer 127 Ack)\n", "(Answer 127(ObjList((CoqString\"\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nConLn Base L1\"))))\n", "(Answer 127 Completed)\n", "(Answer 128 Ack)\n", "(Answer 128(Added 36((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 6))NewTip))\n", "(Answer 128 Completed)\n", "(Answer 129 Ack)\n", "(Feedback((doc_id 0)(span_id 36)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 35)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 36)(route 0)(contents Processed)))\n", "(Answer 129 Completed)\n", "(Answer 130 Ack)\n", "(Answer 130(ObjList((CoqString\"\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nConLn Base L1\"))))\n", "(Answer 130 Completed)\n", "(Answer 131 Ack)\n", "(Answer 131(ObjList((CoqString\"\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nConLn Base L1\"))))\n", "(Answer 131 Completed)\n", "(Answer 132 Ack)\n", "(Answer 132(Added 37((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 24))NewTip))\n", "(Answer 132 Completed)\n", "(Answer 133 Ack)\n", "(Feedback((doc_id 0)(span_id 37)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 36)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 37)(route 0)(contents Processed)))\n", "(Answer 133 Completed)\n", "(Answer 134 Ack)\n", "(Answer 134(ObjList((CoqString\"\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nConLn (ln (base t)) (ln (Side1 t))\"))))\n", "(Answer 134 Completed)\n", "(Answer 135 Ack)\n", "(Answer 135(ObjList((CoqString\"\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nConLn (ln (base t)) (ln (Side1 t))\"))))\n", "(Answer 135 Completed)\n", "(Answer 136 Ack)\n", "(Answer 136(Added 38((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 26))NewTip))\n", "(Answer 136 Completed)\n", "(Answer 137 Ack)\n", "(Feedback((doc_id 0)(span_id 38)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 37)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 38)(route 0)(contents Processed)))\n", "(Answer 137 Completed)\n", "(Answer 138 Ack)\n", "(Answer 138(ObjList((CoqString\"\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nexists b : Point,\\n                               Incident b (ln (base t)) /\\\\\\n                               Incident b (ln (Side1 t))\"))))\n", "(Answer 138 Completed)\n", "(Answer 139 Ack)\n", "(Answer 139(ObjList((CoqString\"\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nexists b : Point,\\n                               Incident b (ln (base t)) /\\\\\\n                               Incident b (ln (Side1 t))\"))))\n", "(Answer 139 Completed)\n", "(Answer 140 Ack)\n", "(Answer 140(Added 39((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 38))NewTip))\n", "(Answer 140 Completed)\n", "(Answer 141 Ack)\n", "(Feedback((doc_id 0)(span_id 39)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 38)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 39)(route 0)(contents Processed)))\n", "(Answer 141 Completed)\n", "(Answer 142 Ack)\n", "(Answer 142(ObjList((CoqString\"\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nIncident (origin (base t)) (ln (Side1 t))\"))))\n", "(Answer 142 Completed)\n", "(Answer 143 Ack)\n", "(Answer 143(ObjList((CoqString\"\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nIncident (origin (base t)) (ln (Side1 t))\"))))\n", "(Answer 143 Completed)\n", "(Answer 144 Ack)\n", "(Answer 144(Added 40((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 24))NewTip))\n", "(Answer 144 Completed)\n", "(Answer 145 Ack)\n", "(Feedback((doc_id 0)(span_id 40)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 39)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 40)(route 0)(contents Processed)))\n", "(Answer 145 Completed)\n", "(Answer 146 Ack)\n", "(Answer 146(ObjList((CoqString\"\"))))\n", "(Answer 146 Completed)\n", "(Answer 147 Ack)\n", "(Answer 147(ObjList((CoqString\"\"))))\n", "(Answer 147 Completed)\n", "(Answer 148 Ack)\n", "(Answer 148(Added 41((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 4))NewTip))\n", "(Answer 148 Completed)\n", "(Answer 149 Ack)\n", "(Feedback((doc_id 0)(span_id 41)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 40)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 35)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 41)(route 0)(contents Processed)))\n", "(Answer 149 Completed)\n", "(Answer 150 Ack)\n", "(Answer 150(ObjList()))\n", "(Answer 150 Completed)\n", "(Answer 151 Ack)\n", "(Answer 151(ObjList()))\n", "(Answer 151 Completed)\n", "(Answer 152 Ack)\n", "(Answer 152(Added 42((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 20))NewTip))\n", "(Answer 152 Completed)\n", "(Answer 153 Ack)\n", "(Feedback((doc_id 0)(span_id 42)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 41)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 42)(route 0)(contents(Message(level Warning)(loc())(pp(Pp_glue((Pp_string Adding)(Pp_print_break 1 0)(Pp_string and)(Pp_print_break 1 0)(Pp_string removing)(Pp_print_break 1 0)(Pp_string hints)(Pp_print_break 1 0)(Pp_string in)(Pp_print_break 1 0)(Pp_string the)(Pp_print_break 1 0)(Pp_string core)(Pp_print_break 1 0)(Pp_string database)(Pp_print_break 1 0)(Pp_string implicitly)(Pp_print_break 1 0)(Pp_string is)(Pp_print_break 1 0)(Pp_string deprecated.)(Pp_print_break 1 0)(Pp_string Please)(Pp_print_break 1 0)(Pp_string specify)(Pp_print_break 1 0)(Pp_string a)(Pp_print_break 1 0)(Pp_string hint)(Pp_print_break 1 0)(Pp_string database.)(Pp_print_break 1 0)(Pp_string\"[implicit-core-hint-db,deprecated]\"))))(str\"Adding and removing hints in the core database implicitly is deprecated.\\nPlease specify a hint database. [implicit-core-hint-db,deprecated]\")))))\n", "(Feedback((doc_id 0)(span_id 42)(route 0)(contents Processed)))\n", "(Answer 153 Completed)\n", "(Answer 154 Ack)\n", "(Answer 154(ObjList()))\n", "(Answer 154 Completed)\n", "(Answer 155 Ack)\n", "(Answer 155(ObjList()))\n", "(Answer 155 Completed)\n", "(Answer 156 Ack)\n", "(Answer 156(Added 43((fname ToplevelInput)(line_nb 2)(bol_pos 1)(line_nb_last 2)(bol_pos_last 1)(bp 1)(ep 27))NewTip))\n", "(Answer 156 Completed)\n", "(Answer 157 Ack)\n", "(Feedback((doc_id 0)(span_id 43)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 42)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 43)(route 0)(contents Processed)))\n", "(Answer 157 Completed)\n", "(Answer 158 Ack)\n", "(Answer 158(ObjList((CoqString\"\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nDiLn Base L3\"))))\n", "(Answer 158 Completed)\n", "(Answer 159 Ack)\n", "(Answer 159(ObjList((CoqString\"\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nDiLn Base L3\"))))\n", "(Answer 159 Completed)\n", "(Answer 160 Ack)\n", "(Answer 160(Added 44((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 6))NewTip))\n", "(Answer 160 Completed)\n", "(Answer 161 Ack)\n", "(Feedback((doc_id 0)(span_id 44)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 43)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 44)(route 0)(contents Processed)))\n", "(Answer 161 Completed)\n", "(Answer 162 Ack)\n", "(Answer 162(ObjList((CoqString\"\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nDiLn Base L3\"))))\n", "(Answer 162 Completed)\n", "(Answer 163 Ack)\n", "(Answer 163(ObjList((CoqString\"\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nDiLn Base L3\"))))\n", "(Answer 163 Completed)\n", "(Answer 164 Ack)\n", "(Answer 164(Added 45((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 33))NewTip))\n", "(Answer 164 Completed)\n", "(Answer 165 Ack)\n", "(Feedback((doc_id 0)(span_id 45)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 44)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 45)(route 0)(contents Processed)))\n", "(Answer 165 Completed)\n", "(Answer 166 Ack)\n", "(Answer 166(ObjList((CoqString\"\"))))\n", "(Answer 166 Completed)\n", "(Answer 167 Ack)\n", "(Answer 167(ObjList((CoqString\"\"))))\n", "(Answer 167 Completed)\n", "(Answer 168 Ack)\n", "(Answer 168(Added 46((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 4))NewTip))\n", "(Answer 168 Completed)\n", "(Answer 169 Ack)\n", "(Feedback((doc_id 0)(span_id 46)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 45)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 43)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 46)(route 0)(contents Processed)))\n", "(Answer 169 Completed)\n", "(Answer 170 Ack)\n", "(Answer 170(ObjList()))\n", "(Answer 170 Completed)\n", "(Answer 171 Ack)\n", "(Answer 171(ObjList()))\n", "(Answer 171 Completed)\n", "(Answer 172 Ack)\n", "(Answer 172(Added 47((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 20))NewTip))\n", "(Answer 172 Completed)\n", "(Answer 173 Ack)\n", "(Feedback((doc_id 0)(span_id 47)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 46)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 47)(route 0)(contents(Message(level Warning)(loc())(pp(Pp_glue((Pp_string Adding)(Pp_print_break 1 0)(Pp_string and)(Pp_print_break 1 0)(Pp_string removing)(Pp_print_break 1 0)(Pp_string hints)(Pp_print_break 1 0)(Pp_string in)(Pp_print_break 1 0)(Pp_string the)(Pp_print_break 1 0)(Pp_string core)(Pp_print_break 1 0)(Pp_string database)(Pp_print_break 1 0)(Pp_string implicitly)(Pp_print_break 1 0)(Pp_string is)(Pp_print_break 1 0)(Pp_string deprecated.)(Pp_print_break 1 0)(Pp_string Please)(Pp_print_break 1 0)(Pp_string specify)(Pp_print_break 1 0)(Pp_string a)(Pp_print_break 1 0)(Pp_string hint)(Pp_print_break 1 0)(Pp_string database.)(Pp_print_break 1 0)(Pp_string\"[implicit-core-hint-db,deprecated]\"))))(str\"Adding and removing hints in the core database implicitly is deprecated.\\nPlease specify a hint database. [implicit-core-hint-db,deprecated]\")))))\n", "(Feedback((doc_id 0)(span_id 47)(route 0)(contents Processed)))\n", "(Answer 173 Completed)\n", "(Answer 174 Ack)\n", "(Answer 174(ObjList()))\n", "(Answer 174 Completed)\n", "(Answer 175 Ack)\n", "(Answer 175(ObjList()))\n", "(Answer 175 Completed)\n", "(Answer 176 Ack)\n", "(Answer 176(Added 48((fname ToplevelInput)(line_nb 2)(bol_pos 1)(line_nb_last 2)(bol_pos_last 1)(bp 1)(ep 26))NewTip))\n", "(Answer 176 Completed)\n", "(Answer 177 Ack)\n", "(Feedback((doc_id 0)(span_id 48)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 47)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 48)(route 0)(contents Processed)))\n", "(Answer 177 Completed)\n", "(Answer 178 Ack)\n", "(Answer 178(ObjList((CoqString\"\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nApart B L1\"))))\n", "(Answer 178 Completed)\n", "(Answer 179 Ack)\n", "(Answer 179(ObjList((CoqString\"\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nApart B L1\"))))\n", "(Answer 179 Completed)\n", "(Answer 180 Ack)\n", "(Answer 180(Added 49((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 6))NewTip))\n", "(Answer 180 Completed)\n", "(Answer 181 Ack)\n", "(Feedback((doc_id 0)(span_id 49)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 48)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 49)(route 0)(contents Processed)))\n", "(Answer 181 Completed)\n", "(Answer 182 Ack)\n", "(Answer 182(ObjList((CoqString\"\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nApart B L1\"))))\n", "(Answer 182 Completed)\n", "(Answer 183 Ack)\n", "(Answer 183(ObjList((CoqString\"\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nApart B L1\"))))\n", "(Answer 183 Completed)\n", "(Answer 184 Ack)\n", "(Answer 184(Added 50((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 21))NewTip))\n", "(Answer 184 Completed)\n", "(Answer 185 Ack)\n", "(Feedback((doc_id 0)(span_id 50)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 49)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 50)(route 0)(contents Processed)))\n", "(Answer 185 Completed)\n", "(Answer 186 Ack)\n", "(Answer 186(ObjList((CoqString\"\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nApart (extremity (base t)) (ln (Side1 t))\"))))\n", "(Answer 186 Completed)\n", "(Answer 187 Ack)\n", "(Answer 187(ObjList((CoqString\"\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nApart (extremity (base t)) (ln (Side1 t))\"))))\n", "(Answer 187 Completed)\n", "(Answer 188 Ack)\n", "(Answer 188(Added 51((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 61))NewTip))\n", "(Answer 188 Completed)\n", "(Answer 189 Ack)\n", "(Feedback((doc_id 0)(span_id 51)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 50)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 51)(route 0)(contents Processed)))\n", "(Answer 189 Completed)\n", "(Answer 190 Ack)\n", "(Answer 190(ObjList((CoqString\"\"))))\n", "(Answer 190 Completed)\n", "(Answer 191 Ack)\n", "(Answer 191(ObjList((CoqString\"\"))))\n", "(Answer 191 Completed)\n", "(Answer 192 Ack)\n", "(Answer 192(Added 52((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 4))NewTip))\n", "(Answer 192 Completed)\n", "(Answer 193 Ack)\n", "(Feedback((doc_id 0)(span_id 52)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 51)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 48)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 52)(route 0)(contents Processed)))\n", "(Answer 193 Completed)\n", "(Answer 194 Ack)\n", "(Answer 194(ObjList()))\n", "(Answer 194 Completed)\n", "(Answer 195 Ack)\n", "(Answer 195(ObjList()))\n", "(Answer 195 Completed)\n", "(Answer 196 Ack)\n", "(Answer 196(Added 53((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 21))NewTip))\n", "(Answer 196 Completed)\n", "(Answer 197 Ack)\n", "(Feedback((doc_id 0)(span_id 53)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 52)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 53)(route 0)(contents(Message(level Warning)(loc())(pp(Pp_glue((Pp_string Adding)(Pp_print_break 1 0)(Pp_string and)(Pp_print_break 1 0)(Pp_string removing)(Pp_print_break 1 0)(Pp_string hints)(Pp_print_break 1 0)(Pp_string in)(Pp_print_break 1 0)(Pp_string the)(Pp_print_break 1 0)(Pp_string core)(Pp_print_break 1 0)(Pp_string database)(Pp_print_break 1 0)(Pp_string implicitly)(Pp_print_break 1 0)(Pp_string is)(Pp_print_break 1 0)(Pp_string deprecated.)(Pp_print_break 1 0)(Pp_string Please)(Pp_print_break 1 0)(Pp_string specify)(Pp_print_break 1 0)(Pp_string a)(Pp_print_break 1 0)(Pp_string hint)(Pp_print_break 1 0)(Pp_string database.)(Pp_print_break 1 0)(Pp_string\"[implicit-core-hint-db,deprecated]\"))))(str\"Adding and removing hints in the core database implicitly is deprecated.\\nPlease specify a hint database. [implicit-core-hint-db,deprecated]\")))))\n", "(Feedback((doc_id 0)(span_id 53)(route 0)(contents Processed)))\n", "(Answer 197 Completed)\n", "(Answer 198 Ack)\n", "(Answer 198(ObjList()))\n", "(Answer 198 Completed)\n", "(Answer 199 Ack)\n", "(Answer 199(ObjList()))\n", "(Answer 199 Completed)\n", "(Answer 200 Ack)\n", "(Answer 200(Added 54((fname ToplevelInput)(line_nb 2)(bol_pos 1)(line_nb_last 2)(bol_pos_last 1)(bp 1)(ep 26))NewTip))\n", "(Answer 200 Completed)\n", "(Answer 201 Ack)\n", "(Feedback((doc_id 0)(span_id 54)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 53)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 54)(route 0)(contents Processed)))\n", "(Answer 201 Completed)\n", "(Answer 202 Ack)\n", "(Answer 202(ObjList((CoqString\"\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nDiLn L1 L4\"))))\n", "(Answer 202 Completed)\n", "(Answer 203 Ack)\n", "(Answer 203(ObjList((CoqString\"\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nDiLn L1 L4\"))))\n", "(Answer 203 Completed)\n", "(Answer 204 Ack)\n", "(Answer 204(Added 55((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 6))NewTip))\n", "(Answer 204 Completed)\n", "(Answer 205 Ack)\n", "(Feedback((doc_id 0)(span_id 55)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 54)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 55)(route 0)(contents Processed)))\n", "(Answer 205 Completed)\n", "(Answer 206 Ack)\n", "(Answer 206(ObjList((CoqString\"\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nDiLn L1 L4\"))))\n", "(Answer 206 Completed)\n", "(Answer 207 Ack)\n", "(Answer 207(ObjList((CoqString\"\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nDiLn L1 L4\"))))\n", "(Answer 207 Completed)\n", "(Answer 208 Ack)\n", "(Answer 208(Added 56((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 28))NewTip))\n", "(Answer 208 Completed)\n", "(Answer 209 Ack)\n", "(Feedback((doc_id 0)(span_id 56)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 55)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 56)(route 0)(contents Processed)))\n", "(Answer 209 Completed)\n", "(Answer 210 Ack)\n", "(Answer 210(ObjList((CoqString\"\"))))\n", "(Answer 210 Completed)\n", "(Answer 211 Ack)\n", "(Answer 211(ObjList((CoqString\"\"))))\n", "(Answer 211 Completed)\n", "(Answer 212 Ack)\n", "(Answer 212(Added 57((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 4))NewTip))\n", "(Answer 212 Completed)\n", "(Answer 213 Ack)\n", "(Feedback((doc_id 0)(span_id 57)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 56)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 54)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 57)(route 0)(contents Processed)))\n", "(Answer 213 Completed)\n", "(Answer 214 Ack)\n", "(Answer 214(ObjList()))\n", "(Answer 214 Completed)\n", "(Answer 215 Ack)\n", "(Answer 215(ObjList()))\n", "(Answer 215 Completed)\n", "(Answer 216 Ack)\n", "(Answer 216(Added 58((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 21))NewTip))\n", "(Answer 216 Completed)\n", "(Answer 217 Ack)\n", "(Feedback((doc_id 0)(span_id 58)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 57)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 58)(route 0)(contents(Message(level Warning)(loc())(pp(Pp_glue((Pp_string Adding)(Pp_print_break 1 0)(Pp_string and)(Pp_print_break 1 0)(Pp_string removing)(Pp_print_break 1 0)(Pp_string hints)(Pp_print_break 1 0)(Pp_string in)(Pp_print_break 1 0)(Pp_string the)(Pp_print_break 1 0)(Pp_string core)(Pp_print_break 1 0)(Pp_string database)(Pp_print_break 1 0)(Pp_string implicitly)(Pp_print_break 1 0)(Pp_string is)(Pp_print_break 1 0)(Pp_string deprecated.)(Pp_print_break 1 0)(Pp_string Please)(Pp_print_break 1 0)(Pp_string specify)(Pp_print_break 1 0)(Pp_string a)(Pp_print_break 1 0)(Pp_string hint)(Pp_print_break 1 0)(Pp_string database.)(Pp_print_break 1 0)(Pp_string\"[implicit-core-hint-db,deprecated]\"))))(str\"Adding and removing hints in the core database implicitly is deprecated.\\nPlease specify a hint database. [implicit-core-hint-db,deprecated]\")))))\n", "(Feedback((doc_id 0)(span_id 58)(route 0)(contents Processed)))\n", "(Answer 217 Completed)\n", "(Answer 218 Ack)\n", "(Answer 218(ObjList()))\n", "(Answer 218 Completed)\n", "(Answer 219 Ack)\n", "(Answer 219(ObjList()))\n", "(Answer 219 Completed)\n", "(Answer 220 Ack)\n", "(Answer 220(Added 59((fname ToplevelInput)(line_nb 2)(bol_pos 1)(line_nb_last 2)(bol_pos_last 1)(bp 1)(ep 26))NewTip))\n", "(Answer 220 Completed)\n", "(Answer 221 Ack)\n", "(Feedback((doc_id 0)(span_id 59)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 58)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 59)(route 0)(contents Processed)))\n", "(Answer 221 Completed)\n", "(Answer 222 Ack)\n", "(Answer 222(ObjList((CoqString\"\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nConLn L1 L3\"))))\n", "(Answer 222 Completed)\n", "(Answer 223 Ack)\n", "(Answer 223(ObjList((CoqString\"\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nConLn L1 L3\"))))\n", "(Answer 223 Completed)\n", "(Answer 224 Ack)\n", "(Answer 224(Added 60((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 6))NewTip))\n", "(Answer 224 Completed)\n", "(Answer 225 Ack)\n", "(Feedback((doc_id 0)(span_id 60)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 59)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 60)(route 0)(contents Processed)))\n", "(Answer 225 Completed)\n", "(Answer 226 Ack)\n", "(Answer 226(ObjList((CoqString\"\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nConLn L1 L3\"))))\n", "(Answer 226 Completed)\n", "(Answer 227 Ack)\n", "(Answer 227(ObjList((CoqString\"\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nConLn L1 L3\"))))\n", "(Answer 227 Completed)\n", "(Answer 228 Ack)\n", "(Answer 228(Added 61((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 23))NewTip))\n", "(Answer 228 Completed)\n", "(Answer 229 Ack)\n", "(Feedback((doc_id 0)(span_id 61)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 60)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 61)(route 0)(contents Processed)))\n", "(Answer 229 Completed)\n", "(Answer 230 Ack)\n", "(Answer 230(ObjList((CoqString\"\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nConLn L1 (par Base C)\"))))\n", "(Answer 230 Completed)\n", "(Answer 231 Ack)\n", "(Answer 231(ObjList((CoqString\"\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nConLn L1 (par Base C)\"))))\n", "(Answer 231 Completed)\n", "(Answer 232 Ack)\n", "(Answer 232(Added 62((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 42))NewTip))\n", "(Answer 232 Completed)\n", "(Answer 233 Ack)\n", "(Feedback((doc_id 0)(span_id 62)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 61)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 62)(route 0)(contents Processed)))\n", "(Answer 233 Completed)\n", "(Answer 234 Ack)\n", "(Answer 234(ObjList((CoqString\"\"))))\n", "(Answer 234 Completed)\n", "(Answer 235 Ack)\n", "(Answer 235(ObjList((CoqString\"\"))))\n", "(Answer 235 Completed)\n", "(Answer 236 Ack)\n", "(Answer 236(Added 63((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 4))NewTip))\n", "(Answer 236 Completed)\n", "(Answer 237 Ack)\n", "(Feedback((doc_id 0)(span_id 63)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 62)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 59)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 63)(route 0)(contents Processed)))\n", "(Answer 237 Completed)\n", "(Answer 238 Ack)\n", "(Answer 238(ObjList()))\n", "(Answer 238 Completed)\n", "(Answer 239 Ack)\n", "(Answer 239(ObjList()))\n", "(Answer 239 Completed)\n", "(Answer 240 Ack)\n", "(Answer 240(Added 64((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 20))NewTip))\n", "(Answer 240 Completed)\n", "(Answer 241 Ack)\n", "(Feedback((doc_id 0)(span_id 64)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 63)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 64)(route 0)(contents(Message(level Warning)(loc())(pp(Pp_glue((Pp_string Adding)(Pp_print_break 1 0)(Pp_string and)(Pp_print_break 1 0)(Pp_string removing)(Pp_print_break 1 0)(Pp_string hints)(Pp_print_break 1 0)(Pp_string in)(Pp_print_break 1 0)(Pp_string the)(Pp_print_break 1 0)(Pp_string core)(Pp_print_break 1 0)(Pp_string database)(Pp_print_break 1 0)(Pp_string implicitly)(Pp_print_break 1 0)(Pp_string is)(Pp_print_break 1 0)(Pp_string deprecated.)(Pp_print_break 1 0)(Pp_string Please)(Pp_print_break 1 0)(Pp_string specify)(Pp_print_break 1 0)(Pp_string a)(Pp_print_break 1 0)(Pp_string hint)(Pp_print_break 1 0)(Pp_string database.)(Pp_print_break 1 0)(Pp_string\"[implicit-core-hint-db,deprecated]\"))))(str\"Adding and removing hints in the core database implicitly is deprecated.\\nPlease specify a hint database. [implicit-core-hint-db,deprecated]\")))))\n", "(Feedback((doc_id 0)(span_id 64)(route 0)(contents Processed)))\n", "(Answer 241 Completed)\n", "(Answer 242 Ack)\n", "(Answer 242(ObjList()))\n", "(Answer 242 Completed)\n", "(Answer 243 Ack)\n", "(Answer 243(ObjList()))\n", "(Answer 243 Completed)\n", "(Answer 244 Ack)\n", "(Answer 244(Added 65((fname ToplevelInput)(line_nb 2)(bol_pos 1)(line_nb_last 2)(bol_pos_last 1)(bp 1)(ep 26))NewTip))\n", "(Answer 244 Completed)\n", "(Answer 245 Ack)\n", "(Feedback((doc_id 0)(span_id 65)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 64)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 65)(route 0)(contents Processed)))\n", "(Answer 245 Completed)\n", "(Answer 246 Ack)\n", "(Answer 246(ObjList((CoqString\"\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nConLn L3 L4\"))))\n", "(Answer 246 Completed)\n", "(Answer 247 Ack)\n", "(Answer 247(ObjList((CoqString\"\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nConLn L3 L4\"))))\n", "(Answer 247 Completed)\n", "(Answer 248 Ack)\n", "(Answer 248(Added 66((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 6))NewTip))\n", "(Answer 248 Completed)\n", "(Answer 249 Ack)\n", "(Feedback((doc_id 0)(span_id 66)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 65)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 66)(route 0)(contents Processed)))\n", "(Answer 249 Completed)\n", "(Answer 250 Ack)\n", "(Answer 250(ObjList((CoqString\"\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nConLn L3 L4\"))))\n", "(Answer 250 Completed)\n", "(Answer 251 Ack)\n", "(Answer 251(ObjList((CoqString\"\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nConLn L3 L4\"))))\n", "(Answer 251 Completed)\n", "(Answer 252 Ack)\n", "(Answer 252(Added 67((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 23))NewTip))\n", "(Answer 252 Completed)\n", "(Answer 253 Ack)\n", "(Feedback((doc_id 0)(span_id 67)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 66)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 67)(route 0)(contents Processed)))\n", "(Answer 253 Completed)\n", "(Answer 254 Ack)\n", "(Answer 254(ObjList((CoqString\"\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nConLn L3 (par L1 B)\"))))\n", "(Answer 254 Completed)\n", "(Answer 255 Ack)\n", "(Answer 255(ObjList((CoqString\"\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nConLn L3 (par L1 B)\"))))\n", "(Answer 255 Completed)\n", "(Answer 256 Ack)\n", "(Answer 256(Added 68((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 40))NewTip))\n", "(Answer 256 Completed)\n", "(Answer 257 Ack)\n", "(Feedback((doc_id 0)(span_id 68)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 67)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 68)(route 0)(contents Processed)))\n", "(Answer 257 Completed)\n", "(Answer 258 Ack)\n", "(Answer 258(ObjList((CoqString\"\"))))\n", "(Answer 258 Completed)\n", "(Answer 259 Ack)\n", "(Answer 259(ObjList((CoqString\"\"))))\n", "(Answer 259 Completed)\n", "(Answer 260 Ack)\n", "(Answer 260(Added 69((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 4))NewTip))\n", "(Answer 260 Completed)\n", "(Answer 261 Ack)\n", "(Feedback((doc_id 0)(span_id 69)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 68)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 65)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 69)(route 0)(contents Processed)))\n", "(Answer 261 Completed)\n", "(Answer 262 Ack)\n", "(Answer 262(ObjList()))\n", "(Answer 262 Completed)\n", "(Answer 263 Ack)\n", "(Answer 263(ObjList()))\n", "(Answer 263 Completed)\n", "(Answer 264 Ack)\n", "(Answer 264(Added 70((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 20))NewTip))\n", "(Answer 264 Completed)\n", "(Answer 265 Ack)\n", "(Feedback((doc_id 0)(span_id 70)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 69)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 70)(route 0)(contents(Message(level Warning)(loc())(pp(Pp_glue((Pp_string Adding)(Pp_print_break 1 0)(Pp_string and)(Pp_print_break 1 0)(Pp_string removing)(Pp_print_break 1 0)(Pp_string hints)(Pp_print_break 1 0)(Pp_string in)(Pp_print_break 1 0)(Pp_string the)(Pp_print_break 1 0)(Pp_string core)(Pp_print_break 1 0)(Pp_string database)(Pp_print_break 1 0)(Pp_string implicitly)(Pp_print_break 1 0)(Pp_string is)(Pp_print_break 1 0)(Pp_string deprecated.)(Pp_print_break 1 0)(Pp_string Please)(Pp_print_break 1 0)(Pp_string specify)(Pp_print_break 1 0)(Pp_string a)(Pp_print_break 1 0)(Pp_string hint)(Pp_print_break 1 0)(Pp_string database.)(Pp_print_break 1 0)(Pp_string\"[implicit-core-hint-db,deprecated]\"))))(str\"Adding and removing hints in the core database implicitly is deprecated.\\nPlease specify a hint database. [implicit-core-hint-db,deprecated]\")))))\n", "(Feedback((doc_id 0)(span_id 70)(route 0)(contents Processed)))\n", "(Answer 265 Completed)\n", "(Answer 266 Ack)\n", "(Answer 266(ObjList()))\n", "(Answer 266 Completed)\n", "(Answer 267 Ack)\n", "(Answer 267(ObjList()))\n", "(Answer 267 Completed)\n", "(Answer 268 Ack)\n", "(Answer 268(Added 71((fname ToplevelInput)(line_nb 2)(bol_pos 1)(line_nb_last 2)(bol_pos_last 1)(bp 1)(ep 41))NewTip))\n", "(Answer 268 Completed)\n", "(Answer 269 Ack)\n", "(Feedback((doc_id 0)(span_id 71)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 70)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 71)(route 0)(contents Processed)))\n", "(Answer 269 Completed)\n", "(Answer 270 Ack)\n", "(Answer 270(ObjList()))\n", "(Answer 270 Completed)\n", "(Answer 271 Ack)\n", "(Answer 271(ObjList()))\n", "(Answer 271 Completed)\n", "(Answer 272 Ack)\n", "(Answer 272(Added 72((fname ToplevelInput)(line_nb 2)(bol_pos 1)(line_nb_last 2)(bol_pos_last 1)(bp 1)(ep 25))NewTip))\n", "(Answer 272 Completed)\n", "(Answer 273 Ack)\n", "(Feedback((doc_id 0)(span_id 72)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 71)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 72)(route 0)(contents Processed)))\n", "(Answer 273 Completed)\n", "(Answer 274 Ack)\n", "(Answer 274(ObjList((CoqString\"\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nApart B L3\"))))\n", "(Answer 274 Completed)\n", "(Answer 275 Ack)\n", "(Answer 275(ObjList((CoqString\"\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nApart B L3\"))))\n", "(Answer 275 Completed)\n", "(Answer 276 Ack)\n", "(Answer 276(Added 73((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 6))NewTip))\n", "(Answer 276 Completed)\n", "(Answer 277 Ack)\n", "(Feedback((doc_id 0)(span_id 73)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 72)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 73)(route 0)(contents Processed)))\n", "(Answer 277 Completed)\n", "(Answer 278 Ack)\n", "(Answer 278(ObjList((CoqString\"\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nApart B L3\"))))\n", "(Answer 278 Completed)\n", "(Answer 279 Ack)\n", "(Answer 279(ObjList((CoqString\"\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nApart B L3\"))))\n", "(Answer 279 Completed)\n", "(Answer 280 Ack)\n", "(Answer 280(Added 74((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 5)(bol_pos_last 177)(bp 0)(ep 194))NewTip))\n", "(Answer 280 Completed)\n", "(Answer 281 Ack)\n", "(Feedback((doc_id 0)(span_id 74)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 73)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 74)(route 0)(contents Processed)))\n", "(Answer 281 Completed)\n", "(Answer 282 Ack)\n", "(Answer 282(ObjList((CoqString\"\\n  H'4 : Apart B Base\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nApart B L3\\n\\n  H'3 : ConLn Base L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nApart B L3\"))))\n", "(Answer 282 Completed)\n", "(Answer 283 Ack)\n", "(Answer 283(ObjList((CoqString\"\\n  H'4 : Apart B Base\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nApart B L3\\n\\n  H'3 : ConLn Base L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nApart B L3\"))))\n", "(Answer 283 Completed)\n", "(Answer 284 Ack)\n", "(Answer 284(Added 75((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 22))NewTip))\n", "(Answer 284 Completed)\n", "(Answer 285 Ack)\n", "(Feedback((doc_id 0)(span_id 75)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 74)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 75)(route 0)(contents Processed)))\n", "(Answer 285 Completed)\n", "(Answer 286 Ack)\n", "(Answer 286(ObjList((CoqString\"\\n  H'4 : Apart (extremity (base t)) (ln (base t))\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nApart B L3\\n\\n  H'3 : ConLn Base L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nApart B L3\"))))\n", "(Answer 286 Completed)\n", "(Answer 287 Ack)\n", "(Answer 287(ObjList((CoqString\"\\n  H'4 : Apart (extremity (base t)) (ln (base t))\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nApart B L3\\n\\n  H'3 : ConLn Base L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nApart B L3\"))))\n", "(Answer 287 Completed)\n", "(Answer 288 Ack)\n", "(Answer 288(Added 76((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 30))NewTip))\n", "(Answer 288 Completed)\n", "(Answer 289 Ack)\n", "(Feedback((doc_id 0)(span_id 76)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 75)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 76)(route 0)(contents Processed)))\n", "(Answer 289 Completed)\n", "(Answer 290 Ack)\n", "(Answer 290(ObjList((CoqString\"\\n  H'3 : ConLn Base L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nApart B L3\"))))\n", "(Answer 290 Completed)\n", "(Answer 291 Ack)\n", "(Answer 291(ObjList((CoqString\"\\n  H'3 : ConLn Base L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nApart B L3\"))))\n", "(Answer 291 Completed)\n", "(Answer 292 Ack)\n", "(Answer 292(Added 77((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 17))NewTip))\n", "(Answer 292 Completed)\n", "(Answer 293 Ack)\n", "(Feedback((doc_id 0)(span_id 77)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 76)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 77)(route 0)(contents Processed)))\n", "(Answer 293 Completed)\n", "(Answer 294 Ack)\n", "(Answer 294(ObjList((CoqString\"\\n  H'3 : ConLn Base (par Base C)\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nApart B L3\"))))\n", "(Answer 294 Completed)\n", "(Answer 295 Ack)\n", "(Answer 295(ObjList((CoqString\"\\n  H'3 : ConLn Base (par Base C)\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nApart B L3\"))))\n", "(Answer 295 Completed)\n", "(Answer 296 Ack)\n", "(Answer 296(Added 78((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 26))NewTip))\n", "(Answer 296 Completed)\n", "(Answer 297 Ack)\n", "(Feedback((doc_id 0)(span_id 78)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 77)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 78)(route 0)(contents Processed)))\n", "(Answer 297 Completed)\n", "(Answer 298 Ack)\n", "(Answer 298(ObjList((CoqString\"\"))))\n", "(Answer 298 Completed)\n", "(Answer 299 Ack)\n", "(Answer 299(ObjList((CoqString\"\"))))\n", "(Answer 299 Completed)\n", "(Answer 300 Ack)\n", "(Answer 300(Added 79((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 4))NewTip))\n", "(Answer 300 Completed)\n", "(Answer 301 Ack)\n", "(Feedback((doc_id 0)(span_id 79)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 78)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 72)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 79)(route 0)(contents Processed)))\n", "(Answer 301 Completed)\n", "(Answer 302 Ack)\n", "(Answer 302(ObjList()))\n", "(Answer 302 Completed)\n", "(Answer 303 Ack)\n", "(Answer 303(ObjList()))\n", "(Answer 303 Completed)\n", "(Answer 304 Ack)\n", "(Answer 304(Added 80((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 20))NewTip))\n", "(Answer 304 Completed)\n", "(Answer 305 Ack)\n", "(Feedback((doc_id 0)(span_id 80)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 79)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 80)(route 0)(contents(Message(level Warning)(loc())(pp(Pp_glue((Pp_string Adding)(Pp_print_break 1 0)(Pp_string and)(Pp_print_break 1 0)(Pp_string removing)(Pp_print_break 1 0)(Pp_string hints)(Pp_print_break 1 0)(Pp_string in)(Pp_print_break 1 0)(Pp_string the)(Pp_print_break 1 0)(Pp_string core)(Pp_print_break 1 0)(Pp_string database)(Pp_print_break 1 0)(Pp_string implicitly)(Pp_print_break 1 0)(Pp_string is)(Pp_print_break 1 0)(Pp_string deprecated.)(Pp_print_break 1 0)(Pp_string Please)(Pp_print_break 1 0)(Pp_string specify)(Pp_print_break 1 0)(Pp_string a)(Pp_print_break 1 0)(Pp_string hint)(Pp_print_break 1 0)(Pp_string database.)(Pp_print_break 1 0)(Pp_string\"[implicit-core-hint-db,deprecated]\"))))(str\"Adding and removing hints in the core database implicitly is deprecated.\\nPlease specify a hint database. [implicit-core-hint-db,deprecated]\")))))\n", "(Feedback((doc_id 0)(span_id 80)(route 0)(contents Processed)))\n", "(Answer 305 Completed)\n", "(Answer 306 Ack)\n", "(Answer 306(ObjList()))\n", "(Answer 306 Completed)\n", "(Answer 307 Ack)\n", "(Answer 307(ObjList()))\n", "(Answer 307 Completed)\n", "(Answer 308 Ack)\n", "(Answer 308(Added 81((fname ToplevelInput)(line_nb 2)(bol_pos 1)(line_nb_last 2)(bol_pos_last 1)(bp 1)(ep 25))NewTip))\n", "(Answer 308 Completed)\n", "(Answer 309 Ack)\n", "(Feedback((doc_id 0)(span_id 81)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 80)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 81)(route 0)(contents Processed)))\n", "(Answer 309 Completed)\n", "(Answer 310 Ack)\n", "(Answer 310(ObjList((CoqString\"\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nApart C L4\"))))\n", "(Answer 310 Completed)\n", "(Answer 311 Ack)\n", "(Answer 311(ObjList((CoqString\"\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nApart C L4\"))))\n", "(Answer 311 Completed)\n", "(Answer 312 Ack)\n", "(Answer 312(Added 82((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 6))NewTip))\n", "(Answer 312 Completed)\n", "(Answer 313 Ack)\n", "(Feedback((doc_id 0)(span_id 82)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 81)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 82)(route 0)(contents Processed)))\n", "(Answer 313 Completed)\n", "(Answer 314 Ack)\n", "(Answer 314(ObjList((CoqString\"\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nApart C L4\"))))\n", "(Answer 314 Completed)\n", "(Answer 315 Ack)\n", "(Answer 315(ObjList((CoqString\"\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nApart C L4\"))))\n", "(Answer 315 Completed)\n", "(Answer 316 Ack)\n", "(Answer 316(Added 83((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 5)(bol_pos_last 175)(bp 0)(ep 192))NewTip))\n", "(Answer 316 Completed)\n", "(Answer 317 Ack)\n", "(Feedback((doc_id 0)(span_id 83)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 82)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 83)(route 0)(contents Processed)))\n", "(Answer 317 Completed)\n", "(Answer 318 Ack)\n", "(Answer 318(ObjList((CoqString\"\\n  H'6 : Apart C L1\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nApart C L4\\n\\n  H'5 : ConLn L1 L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nApart C L4\"))))\n", "(Answer 318 Completed)\n", "(Answer 319 Ack)\n", "(Answer 319(ObjList((CoqString\"\\n  H'6 : Apart C L1\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nApart C L4\\n\\n  H'5 : ConLn L1 L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nApart C L4\"))))\n", "(Answer 319 Completed)\n", "(Answer 320 Ack)\n", "(Answer 320(Added 84((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 20))NewTip))\n", "(Answer 320 Completed)\n", "(Answer 321 Ack)\n", "(Feedback((doc_id 0)(span_id 84)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 83)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 84)(route 0)(contents Processed)))\n", "(Answer 321 Completed)\n", "(Answer 322 Ack)\n", "(Answer 322(ObjList((CoqString\"\\n  H'6 : Apart (summit t) (ln (Side1 t))\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nApart C L4\\n\\n  H'5 : ConLn L1 L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nApart C L4\"))))\n", "(Answer 322 Completed)\n", "(Answer 323 Ack)\n", "(Answer 323(ObjList((CoqString\"\\n  H'6 : Apart (summit t) (ln (Side1 t))\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nApart C L4\\n\\n  H'5 : ConLn L1 L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nApart C L4\"))))\n", "(Answer 323 Completed)\n", "(Answer 324 Ack)\n", "(Answer 324(Added 85((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 44))NewTip))\n", "(Answer 324 Completed)\n", "(Answer 325 Ack)\n", "(Feedback((doc_id 0)(span_id 85)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 84)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 85)(route 0)(contents Processed)))\n", "(Answer 325 Completed)\n", "(Answer 326 Ack)\n", "(Answer 326(ObjList((CoqString\"\\n  H' : Apart (origin (Side1 t)) (ln (Side1 t))\\n  H'6 : Apart (summit t) (ln (Side1 t))\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nApart C L4\\n\\n  H'5 : ConLn L1 L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nApart C L4\"))))\n", "(Answer 326 Completed)\n", "(Answer 327 Ack)\n", "(Answer 327(ObjList((CoqString\"\\n  H' : Apart (origin (Side1 t)) (ln (Side1 t))\\n  H'6 : Apart (summit t) (ln (Side1 t))\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nApart C L4\\n\\n  H'5 : ConLn L1 L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nApart C L4\"))))\n", "(Answer 327 Completed)\n", "(Answer 328 Ack)\n", "(Answer 328(Added 86((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 31))NewTip))\n", "(Answer 328 Completed)\n", "(Answer 329 Ack)\n", "(Feedback((doc_id 0)(span_id 86)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 85)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 86)(route 0)(contents Processed)))\n", "(Answer 329 Completed)\n", "(Answer 330 Ack)\n", "(Answer 330(ObjList((CoqString\"\\n  H'5 : ConLn L1 L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nApart C L4\"))))\n", "(Answer 330 Completed)\n", "(Answer 331 Ack)\n", "(Answer 331(ObjList((CoqString\"\\n  H'5 : ConLn L1 L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nApart C L4\"))))\n", "(Answer 331 Completed)\n", "(Answer 332 Ack)\n", "(Answer 332(Added 87((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 24))NewTip))\n", "(Answer 332 Completed)\n", "(Answer 333 Ack)\n", "(Feedback((doc_id 0)(span_id 87)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 86)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 87)(route 0)(contents Processed)))\n", "(Answer 333 Completed)\n", "(Answer 334 Ack)\n", "(Answer 334(ObjList((CoqString\"\"))))\n", "(Answer 334 Completed)\n", "(Answer 335 Ack)\n", "(Answer 335(ObjList((CoqString\"\"))))\n", "(Answer 335 Completed)\n", "(Answer 336 Ack)\n", "(Answer 336(Added 88((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 4))NewTip))\n", "(Answer 336 Completed)\n", "(Answer 337 Ack)\n", "(Feedback((doc_id 0)(span_id 88)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 87)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 81)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 88)(route 0)(contents Processed)))\n", "(Answer 337 Completed)\n", "(Answer 338 Ack)\n", "(Answer 338(ObjList()))\n", "(Answer 338 Completed)\n", "(Answer 339 Ack)\n", "(Answer 339(ObjList()))\n", "(Answer 339 Completed)\n", "(Answer 340 Ack)\n", "(Answer 340(Added 89((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 20))NewTip))\n", "(Answer 340 Completed)\n", "(Answer 341 Ack)\n", "(Feedback((doc_id 0)(span_id 89)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 88)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 89)(route 0)(contents(Message(level Warning)(loc())(pp(Pp_glue((Pp_string Adding)(Pp_print_break 1 0)(Pp_string and)(Pp_print_break 1 0)(Pp_string removing)(Pp_print_break 1 0)(Pp_string hints)(Pp_print_break 1 0)(Pp_string in)(Pp_print_break 1 0)(Pp_string the)(Pp_print_break 1 0)(Pp_string core)(Pp_print_break 1 0)(Pp_string database)(Pp_print_break 1 0)(Pp_string implicitly)(Pp_print_break 1 0)(Pp_string is)(Pp_print_break 1 0)(Pp_string deprecated.)(Pp_print_break 1 0)(Pp_string Please)(Pp_print_break 1 0)(Pp_string specify)(Pp_print_break 1 0)(Pp_string a)(Pp_print_break 1 0)(Pp_string hint)(Pp_print_break 1 0)(Pp_string database.)(Pp_print_break 1 0)(Pp_string\"[implicit-core-hint-db,deprecated]\"))))(str\"Adding and removing hints in the core database implicitly is deprecated.\\nPlease specify a hint database. [implicit-core-hint-db,deprecated]\")))))\n", "(Feedback((doc_id 0)(span_id 89)(route 0)(contents Processed)))\n", "(Answer 341 Completed)\n", "(Answer 342 Ack)\n", "(Answer 342(ObjList()))\n", "(Answer 342 Completed)\n", "(Answer 343 Ack)\n", "(Answer 343(ObjList()))\n", "(Answer 343 Completed)\n", "(Answer 344 Ack)\n", "(Answer 344(Added 90((fname ToplevelInput)(line_nb 2)(bol_pos 1)(line_nb_last 2)(bol_pos_last 1)(bp 1)(ep 23))NewTip))\n", "(Answer 344 Completed)\n", "(Answer 345 Ack)\n", "(Feedback((doc_id 0)(span_id 90)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 89)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 90)(route 0)(contents Processed)))\n", "(Answer 345 Completed)\n", "(Answer 346 Ack)\n", "(Answer 346(ObjList((CoqString\"\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nDiPt C D\"))))\n", "(Answer 346 Completed)\n", "(Answer 347 Ack)\n", "(Answer 347(ObjList((CoqString\"\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nDiPt C D\"))))\n", "(Answer 347 Completed)\n", "(Answer 348 Ack)\n", "(Answer 348(Added 91((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 6))NewTip))\n", "(Answer 348 Completed)\n", "(Answer 349 Ack)\n", "(Feedback((doc_id 0)(span_id 91)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 90)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 91)(route 0)(contents Processed)))\n", "(Answer 349 Completed)\n", "(Answer 350 Ack)\n", "(Answer 350(ObjList((CoqString\"\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nDiPt C D\"))))\n", "(Answer 350 Completed)\n", "(Answer 351 Ack)\n", "(Answer 351(ObjList((CoqString\"\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nDiPt C D\"))))\n", "(Answer 351 Completed)\n", "(Answer 352 Ack)\n", "(Answer 352(Added 92((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 23))NewTip))\n", "(Answer 352 Completed)\n", "(Answer 353 Ack)\n", "(Feedback((doc_id 0)(span_id 92)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 91)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 92)(route 0)(contents Processed)))\n", "(Answer 353 Completed)\n", "(Answer 354 Ack)\n", "(Answer 354(ObjList((CoqString\"\"))))\n", "(Answer 354 Completed)\n", "(Answer 355 Ack)\n", "(Answer 355(ObjList((CoqString\"\"))))\n", "(Answer 355 Completed)\n", "(Answer 356 Ack)\n", "(Answer 356(Added 93((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 4))NewTip))\n", "(Answer 356 Completed)\n", "(Answer 357 Ack)\n", "(Feedback((doc_id 0)(span_id 93)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 92)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 90)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 93)(route 0)(contents Processed)))\n", "(Answer 357 Completed)\n", "(Answer 358 Ack)\n", "(Answer 358(ObjList()))\n", "(Answer 358 Completed)\n", "(Answer 359 Ack)\n", "(Answer 359(ObjList()))\n", "(Answer 359 Completed)\n", "(Answer 360 Ack)\n", "(Answer 360(Added 94((fname ToplevelInput)(line_nb 2)(bol_pos 1)(line_nb_last 2)(bol_pos_last 1)(bp 1)(ep 23))NewTip))\n", "(Answer 360 Completed)\n", "(Answer 361 Ack)\n", "(Feedback((doc_id 0)(span_id 94)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 93)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 94)(route 0)(contents Processed)))\n", "(Answer 361 Completed)\n", "(Answer 362 Ack)\n", "(Answer 362(ObjList((CoqString\"\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nDiPt B D\"))))\n", "(Answer 362 Completed)\n", "(Answer 363 Ack)\n", "(Answer 363(ObjList((CoqString\"\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nDiPt B D\"))))\n", "(Answer 363 Completed)\n", "(Answer 364 Ack)\n", "(Answer 364(Added 95((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 6))NewTip))\n", "(Answer 364 Completed)\n", "(Answer 365 Ack)\n", "(Feedback((doc_id 0)(span_id 95)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 94)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 95)(route 0)(contents Processed)))\n", "(Answer 365 Completed)\n", "(Answer 366 Ack)\n", "(Answer 366(ObjList((CoqString\"\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nDiPt B D\"))))\n", "(Answer 366 Completed)\n", "(Answer 367 Ack)\n", "(Answer 367(ObjList((CoqString\"\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nDiPt B D\"))))\n", "(Answer 367 Completed)\n", "(Answer 368 Ack)\n", "(Answer 368(Added 96((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 23))NewTip))\n", "(Answer 368 Completed)\n", "(Answer 369 Ack)\n", "(Feedback((doc_id 0)(span_id 96)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 95)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 96)(route 0)(contents Processed)))\n", "(Answer 369 Completed)\n", "(Answer 370 Ack)\n", "(Answer 370(ObjList((CoqString\"\"))))\n", "(Answer 370 Completed)\n", "(Answer 371 Ack)\n", "(Answer 371(ObjList((CoqString\"\"))))\n", "(Answer 371 Completed)\n", "(Answer 372 Ack)\n", "(Answer 372(Added 97((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 4))NewTip))\n", "(Answer 372 Completed)\n", "(Answer 373 Ack)\n", "(Feedback((doc_id 0)(span_id 97)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 96)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 94)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 97)(route 0)(contents Processed)))\n", "(Answer 373 Completed)\n", "(Answer 374 Ack)\n", "(Answer 374(ObjList()))\n", "(Answer 374 Completed)\n", "(Answer 375 Ack)\n", "(Answer 375(ObjList()))\n", "(Answer 375 Completed)\n", "(Answer 376 Ack)\n", "(Answer 376(Added 98((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 27))NewTip))\n", "(Answer 376 Completed)\n", "(Answer 377 Ack)\n", "(Feedback((doc_id 0)(span_id 98)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 97)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 98)(route 0)(contents(Message(level Warning)(loc())(pp(Pp_glue((Pp_string Adding)(Pp_print_break 1 0)(Pp_string and)(Pp_print_break 1 0)(Pp_string removing)(Pp_print_break 1 0)(Pp_string hints)(Pp_print_break 1 0)(Pp_string in)(Pp_print_break 1 0)(Pp_string the)(Pp_print_break 1 0)(Pp_string core)(Pp_print_break 1 0)(Pp_string database)(Pp_print_break 1 0)(Pp_string implicitly)(Pp_print_break 1 0)(Pp_string is)(Pp_print_break 1 0)(Pp_string deprecated.)(Pp_print_break 1 0)(Pp_string Please)(Pp_print_break 1 0)(Pp_string specify)(Pp_print_break 1 0)(Pp_string a)(Pp_print_break 1 0)(Pp_string hint)(Pp_print_break 1 0)(Pp_string database.)(Pp_print_break 1 0)(Pp_string\"[implicit-core-hint-db,deprecated]\"))))(str\"Adding and removing hints in the core database implicitly is deprecated.\\nPlease specify a hint database. [implicit-core-hint-db,deprecated]\")))))\n", "(Feedback((doc_id 0)(span_id 98)(route 0)(contents Processed)))\n", "(Answer 377 Completed)\n", "(Answer 378 Ack)\n", "(Answer 378(ObjList()))\n", "(Answer 378 Completed)\n", "(Answer 379 Ack)\n", "(Answer 379(ObjList()))\n", "(Answer 379 Completed)\n", "(Answer 380 Ack)\n", "(Answer 380(Added 99((fname ToplevelInput)(line_nb 2)(bol_pos 1)(line_nb_last 2)(bol_pos_last 1)(bp 1)(ep 28))NewTip))\n", "(Answer 380 Completed)\n", "(Answer 381 Ack)\n", "(Feedback((doc_id 0)(span_id 99)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 98)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 99)(route 0)(contents Processed)))\n", "(Answer 381 Completed)\n", "(Answer 382 Ack)\n", "(Answer 382(ObjList()))\n", "(Answer 382 Completed)\n", "(Answer 383 Ack)\n", "(Answer 383(ObjList()))\n", "(Answer 383 Completed)\n", "(Answer 384 Ack)\n", "(Answer 384(Added 100((fname ToplevelInput)(line_nb 2)(bol_pos 1)(line_nb_last 2)(bol_pos_last 1)(bp 1)(ep 39))NewTip))\n", "(Answer 384 Completed)\n", "(Answer 385 Ack)\n", "(Feedback((doc_id 0)(span_id 100)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 99)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 100)(route 0)(contents Processed)))\n", "(Answer 385 Completed)\n", "(Answer 386 Ack)\n", "(Answer 386(ObjList()))\n", "(Answer 386 Completed)\n", "(Answer 387 Ack)\n", "(Answer 387(ObjList()))\n", "(Answer 387 Completed)\n", "(Answer 388 Ack)\n", "(Answer 388(Added 101((fname ToplevelInput)(line_nb 2)(bol_pos 1)(line_nb_last 2)(bol_pos_last 1)(bp 1)(ep 36))NewTip))\n", "(Answer 388 Completed)\n", "(Answer 389 Ack)\n", "(Feedback((doc_id 0)(span_id 101)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 100)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 101)(route 0)(contents Processed)))\n", "(Answer 389 Completed)\n", "(Answer 390 Ack)\n", "(Answer 390(ObjList()))\n", "(Answer 390 Completed)\n", "(Answer 391 Ack)\n", "(Answer 391(ObjList()))\n", "(Answer 391 Completed)\n", "(Answer 392 Ack)\n", "(Answer 392(Added 102((fname ToplevelInput)(line_nb 2)(bol_pos 1)(line_nb_last 2)(bol_pos_last 1)(bp 1)(ep 36))NewTip))\n", "(Answer 392 Completed)\n", "(Answer 393 Ack)\n", "(Feedback((doc_id 0)(span_id 102)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 101)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 102)(route 0)(contents Processed)))\n", "(Answer 393 Completed)\n", "(Answer 394 Ack)\n", "(Answer 394(ObjList()))\n", "(Answer 394 Completed)\n", "(Answer 395 Ack)\n", "(Answer 395(ObjList()))\n", "(Answer 395 Completed)\n", "(Answer 396 Ack)\n", "(Answer 396(Added 103((fname ToplevelInput)(line_nb 2)(bol_pos 1)(line_nb_last 2)(bol_pos_last 1)(bp 1)(ep 47))NewTip))\n", "(Answer 396 Completed)\n", "(Answer 397 Ack)\n", "(Feedback((doc_id 0)(span_id 103)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 102)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 103)(route 0)(contents Processed)))\n", "(Answer 397 Completed)\n", "(Answer 398 Ack)\n", "(Answer 398(ObjList((CoqString\"\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nEqLn L1 (ln (reverse (Side1 t)))\"))))\n", "(Answer 398 Completed)\n", "(Answer 399 Ack)\n", "(Answer 399(ObjList((CoqString\"\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nEqLn L1 (ln (reverse (Side1 t)))\"))))\n", "(Answer 399 Completed)\n", "(Answer 400 Ack)\n", "(Answer 400(Added 104((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 6))NewTip))\n", "(Answer 400 Completed)\n", "(Answer 401 Ack)\n", "(Feedback((doc_id 0)(span_id 104)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 103)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 104)(route 0)(contents Processed)))\n", "(Answer 401 Completed)\n", "(Answer 402 Ack)\n", "(Answer 402(ObjList((CoqString\"\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nEqLn L1 (ln (reverse (Side1 t)))\"))))\n", "(Answer 402 Completed)\n", "(Answer 403 Ack)\n", "(Answer 403(ObjList((CoqString\"\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nEqLn L1 (ln (reverse (Side1 t)))\"))))\n", "(Answer 403 Completed)\n", "(Answer 404 Ack)\n", "(Answer 404(Added 105((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 29))NewTip))\n", "(Answer 404 Completed)\n", "(Answer 405 Ack)\n", "(Feedback((doc_id 0)(span_id 105)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 104)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 105)(route 0)(contents Processed)))\n", "(Answer 405 Completed)\n", "(Answer 406 Ack)\n", "(Answer 406(ObjList((CoqString\"\"))))\n", "(Answer 406 Completed)\n", "(Answer 407 Ack)\n", "(Answer 407(ObjList((CoqString\"\"))))\n", "(Answer 407 Completed)\n", "(Answer 408 Ack)\n", "(Answer 408(Added 106((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 4))NewTip))\n", "(Answer 408 Completed)\n", "(Answer 409 Ack)\n", "(Feedback((doc_id 0)(span_id 106)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 105)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 103)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 106)(route 0)(contents Processed)))\n", "(Answer 409 Completed)\n", "(Answer 410 Ack)\n", "(Answer 410(ObjList()))\n", "(Answer 410 Completed)\n", "(Answer 411 Ack)\n", "(Answer 411(ObjList()))\n", "(Answer 411 Completed)\n", "(Answer 412 Ack)\n", "(Answer 412(Added 107((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 20))NewTip))\n", "(Answer 412 Completed)\n", "(Answer 413 Ack)\n", "(Feedback((doc_id 0)(span_id 107)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 106)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 107)(route 0)(contents(Message(level Warning)(loc())(pp(Pp_glue((Pp_string Adding)(Pp_print_break 1 0)(Pp_string and)(Pp_print_break 1 0)(Pp_string removing)(Pp_print_break 1 0)(Pp_string hints)(Pp_print_break 1 0)(Pp_string in)(Pp_print_break 1 0)(Pp_string the)(Pp_print_break 1 0)(Pp_string core)(Pp_print_break 1 0)(Pp_string database)(Pp_print_break 1 0)(Pp_string implicitly)(Pp_print_break 1 0)(Pp_string is)(Pp_print_break 1 0)(Pp_string deprecated.)(Pp_print_break 1 0)(Pp_string Please)(Pp_print_break 1 0)(Pp_string specify)(Pp_print_break 1 0)(Pp_string a)(Pp_print_break 1 0)(Pp_string hint)(Pp_print_break 1 0)(Pp_string database.)(Pp_print_break 1 0)(Pp_string\"[implicit-core-hint-db,deprecated]\"))))(str\"Adding and removing hints in the core database implicitly is deprecated.\\nPlease specify a hint database. [implicit-core-hint-db,deprecated]\")))))\n", "(Feedback((doc_id 0)(span_id 107)(route 0)(contents Processed)))\n", "(Answer 413 Completed)\n", "(Answer 414 Ack)\n", "(Answer 414(ObjList()))\n", "(Answer 414 Completed)\n", "(Answer 415 Ack)\n", "(Answer 415(ObjList()))\n", "(Answer 415 Completed)\n", "(Answer 416 Ack)\n", "(Answer 416(Added 108((fname ToplevelInput)(line_nb 2)(bol_pos 1)(line_nb_last 2)(bol_pos_last 1)(bp 1)(ep 31))NewTip))\n", "(Answer 416 Completed)\n", "(Answer 417 Ack)\n", "(Feedback((doc_id 0)(span_id 108)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 107)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 108)(route 0)(contents Processed)))\n", "(Answer 417 Completed)\n", "(Answer 418 Ack)\n", "(Answer 418(ObjList((CoqString\"\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nEqLn L3 (ln S2)\"))))\n", "(Answer 418 Completed)\n", "(Answer 419 Ack)\n", "(Answer 419(ObjList((CoqString\"\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nEqLn L3 (ln S2)\"))))\n", "(Answer 419 Completed)\n", "(Answer 420 Ack)\n", "(Answer 420(Added 109((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 6))NewTip))\n", "(Answer 420 Completed)\n", "(Answer 421 Ack)\n", "(Feedback((doc_id 0)(span_id 109)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 108)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 109)(route 0)(contents Processed)))\n", "(Answer 421 Completed)\n", "(Answer 422 Ack)\n", "(Answer 422(ObjList((CoqString\"\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nEqLn L3 (ln S2)\"))))\n", "(Answer 422 Completed)\n", "(Answer 423 Ack)\n", "(Answer 423(ObjList((CoqString\"\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nEqLn L3 (ln S2)\"))))\n", "(Answer 423 Completed)\n", "(Answer 424 Ack)\n", "(Answer 424(Added 110((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 38))NewTip))\n", "(Answer 424 Completed)\n", "(Answer 425 Ack)\n", "(Feedback((doc_id 0)(span_id 110)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 109)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 110)(route 0)(contents Processed)))\n", "(Answer 425 Completed)\n", "(Answer 426 Ack)\n", "(Answer 426(ObjList((CoqString\"\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nIncident (origin S2) L3\\n\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nIncident (extremity S2) L3\"))))\n", "(Answer 426 Completed)\n", "(Answer 427 Ack)\n", "(Answer 427(ObjList((CoqString\"\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nIncident (origin S2) L3\\n\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nIncident (extremity S2) L3\"))))\n", "(Answer 427 Completed)\n", "(Answer 428 Ack)\n", "(Answer 428(Added 111((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 47))NewTip))\n", "(Answer 428 Completed)\n", "(Answer 429 Ack)\n", "(Feedback((doc_id 0)(span_id 111)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 110)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 111)(route 0)(contents Processed)))\n", "(Answer 429 Completed)\n", "(Answer 430 Ack)\n", "(Answer 430(ObjList((CoqString\"\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nIncident (extremity S2) L3\"))))\n", "(Answer 430 Completed)\n", "(Answer 431 Ack)\n", "(Answer 431(ObjList((CoqString\"\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nIncident (extremity S2) L3\"))))\n", "(Answer 431 Completed)\n", "(Answer 432 Ack)\n", "(Answer 432(Added 112((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 40))NewTip))\n", "(Answer 432 Completed)\n", "(Answer 433 Ack)\n", "(Feedback((doc_id 0)(span_id 112)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 111)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 112)(route 0)(contents Processed)))\n", "(Answer 433 Completed)\n", "(Answer 434 Ack)\n", "(Answer 434(ObjList((CoqString\"\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nIncident\\n                               (pt\\n                                  {|\\n                                  line1 := L3;\\n                                  line2 := L4;\\n                                  Twol_cond := lemma4 |}) \\n                               (par Base C)\"))))\n", "(Answer 434 Completed)\n", "(Answer 435 Ack)\n", "(Answer 435(ObjList((CoqString\"\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nIncident\\n                               (pt\\n                                  {|\\n                                  line1 := L3;\\n                                  line2 := L4;\\n                                  Twol_cond := lemma4 |}) \\n                               (par Base C)\"))))\n", "(Answer 435 Completed)\n", "(Answer 436 Ack)\n", "(Answer 436(Added 113((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 36))NewTip))\n", "(Answer 436 Completed)\n", "(Answer 437 Ack)\n", "(Feedback((doc_id 0)(span_id 113)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 112)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 113)(route 0)(contents Processed)))\n", "(Answer 437 Completed)\n", "(Answer 438 Ack)\n", "(Answer 438(ObjList((CoqString\"\"))))\n", "(Answer 438 Completed)\n", "(Answer 439 Ack)\n", "(Answer 439(ObjList((CoqString\"\"))))\n", "(Answer 439 Completed)\n", "(Answer 440 Ack)\n", "(Answer 440(Added 114((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 4))NewTip))\n", "(Answer 440 Completed)\n", "(Answer 441 Ack)\n", "(Feedback((doc_id 0)(span_id 114)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 113)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 108)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 114)(route 0)(contents Processed)))\n", "(Answer 441 Completed)\n", "(Answer 442 Ack)\n", "(Answer 442(ObjList()))\n", "(Answer 442 Completed)\n", "(Answer 443 Ack)\n", "(Answer 443(ObjList()))\n", "(Answer 443 Completed)\n", "(Answer 444 Ack)\n", "(Answer 444(Added 115((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 21))NewTip))\n", "(Answer 444 Completed)\n", "(Answer 445 Ack)\n", "(Feedback((doc_id 0)(span_id 115)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 114)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 115)(route 0)(contents(Message(level Warning)(loc())(pp(Pp_glue((Pp_string Adding)(Pp_print_break 1 0)(Pp_string and)(Pp_print_break 1 0)(Pp_string removing)(Pp_print_break 1 0)(Pp_string hints)(Pp_print_break 1 0)(Pp_string in)(Pp_print_break 1 0)(Pp_string the)(Pp_print_break 1 0)(Pp_string core)(Pp_print_break 1 0)(Pp_string database)(Pp_print_break 1 0)(Pp_string implicitly)(Pp_print_break 1 0)(Pp_string is)(Pp_print_break 1 0)(Pp_string deprecated.)(Pp_print_break 1 0)(Pp_string Please)(Pp_print_break 1 0)(Pp_string specify)(Pp_print_break 1 0)(Pp_string a)(Pp_print_break 1 0)(Pp_string hint)(Pp_print_break 1 0)(Pp_string database.)(Pp_print_break 1 0)(Pp_string\"[implicit-core-hint-db,deprecated]\"))))(str\"Adding and removing hints in the core database implicitly is deprecated.\\nPlease specify a hint database. [implicit-core-hint-db,deprecated]\")))))\n", "(Feedback((doc_id 0)(span_id 115)(route 0)(contents Processed)))\n", "(Answer 445 Completed)\n", "(Answer 446 Ack)\n", "(Answer 446(ObjList()))\n", "(Answer 446 Completed)\n", "(Answer 447 Ack)\n", "(Answer 447(ObjList()))\n", "(Answer 447 Completed)\n", "(Answer 448 Ack)\n", "(Answer 448(Added 116((fname ToplevelInput)(line_nb 2)(bol_pos 1)(line_nb_last 2)(bol_pos_last 1)(bp 1)(ep 31))NewTip))\n", "(Answer 448 Completed)\n", "(Answer 449 Ack)\n", "(Feedback((doc_id 0)(span_id 116)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 115)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 116)(route 0)(contents Processed)))\n", "(Answer 449 Completed)\n", "(Answer 450 Ack)\n", "(Answer 450(ObjList((CoqString\"\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nEqLn L4 (ln S4)\"))))\n", "(Answer 450 Completed)\n", "(Answer 451 Ack)\n", "(Answer 451(ObjList((CoqString\"\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nEqLn L4 (ln S4)\"))))\n", "(Answer 451 Completed)\n", "(Answer 452 Ack)\n", "(Answer 452(Added 117((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 6))NewTip))\n", "(Answer 452 Completed)\n", "(Answer 453 Ack)\n", "(Feedback((doc_id 0)(span_id 117)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 116)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 117)(route 0)(contents Processed)))\n", "(Answer 453 Completed)\n", "(Answer 454 Ack)\n", "(Answer 454(ObjList((CoqString\"\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nEqLn L4 (ln S4)\"))))\n", "(Answer 454 Completed)\n", "(Answer 455 Ack)\n", "(Answer 455(ObjList((CoqString\"\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nEqLn L4 (ln S4)\"))))\n", "(Answer 455 Completed)\n", "(Answer 456 Ack)\n", "(Answer 456(Added 118((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 38))NewTip))\n", "(Answer 456 Completed)\n", "(Answer 457 Ack)\n", "(Feedback((doc_id 0)(span_id 118)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 117)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 118)(route 0)(contents Processed)))\n", "(Answer 457 Completed)\n", "(Answer 458 Ack)\n", "(Answer 458(ObjList((CoqString\"\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nIncident (origin S4) L4\\n\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nIncident (extremity S4) L4\"))))\n", "(Answer 458 Completed)\n", "(Answer 459 Ack)\n", "(Answer 459(ObjList((CoqString\"\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nIncident (origin S4) L4\\n\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nIncident (extremity S4) L4\"))))\n", "(Answer 459 Completed)\n", "(Answer 460 Ack)\n", "(Answer 460(Added 119((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 43))NewTip))\n", "(Answer 460 Completed)\n", "(Answer 461 Ack)\n", "(Feedback((doc_id 0)(span_id 119)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 118)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 119)(route 0)(contents Processed)))\n", "(Answer 461 Completed)\n", "(Answer 462 Ack)\n", "(Answer 462(ObjList((CoqString\"\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nIncident (extremity S4) L4\"))))\n", "(Answer 462 Completed)\n", "(Answer 463 Ack)\n", "(Answer 463(ObjList((CoqString\"\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nIncident (extremity S4) L4\"))))\n", "(Answer 463 Completed)\n", "(Answer 464 Ack)\n", "(Answer 464(Added 120((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 36))NewTip))\n", "(Answer 464 Completed)\n", "(Answer 465 Ack)\n", "(Feedback((doc_id 0)(span_id 120)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 119)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 120)(route 0)(contents Processed)))\n", "(Answer 465 Completed)\n", "(Answer 466 Ack)\n", "(Answer 466(ObjList((CoqString\"\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nIncident\\n                               (pt\\n                                  {|\\n                                  line1 := L3;\\n                                  line2 := L4;\\n                                  Twol_cond := lemma4 |}) L4\"))))\n", "(Answer 466 Completed)\n", "(Answer 467 Ack)\n", "(Answer 467(ObjList((CoqString\"\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nIncident\\n                               (pt\\n                                  {|\\n                                  line1 := L3;\\n                                  line2 := L4;\\n                                  Twol_cond := lemma4 |}) L4\"))))\n", "(Answer 467 Completed)\n", "(Answer 468 Ack)\n", "(Answer 468(Added 121((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 36))NewTip))\n", "(Answer 468 Completed)\n", "(Answer 469 Ack)\n", "(Feedback((doc_id 0)(span_id 121)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 120)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 121)(route 0)(contents Processed)))\n", "(Answer 469 Completed)\n", "(Answer 470 Ack)\n", "(Answer 470(ObjList((CoqString\"\"))))\n", "(Answer 470 Completed)\n", "(Answer 471 Ack)\n", "(Answer 471(ObjList((CoqString\"\"))))\n", "(Answer 471 Completed)\n", "(Answer 472 Ack)\n", "(Answer 472(Added 122((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 4))NewTip))\n", "(Answer 472 Completed)\n", "(Answer 473 Ack)\n", "(Feedback((doc_id 0)(span_id 122)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 121)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 116)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 122)(route 0)(contents Processed)))\n", "(Answer 473 Completed)\n", "(Answer 474 Ack)\n", "(Answer 474(ObjList()))\n", "(Answer 474 Completed)\n", "(Answer 475 Ack)\n", "(Answer 475(ObjList()))\n", "(Answer 475 Completed)\n", "(Answer 476 Ack)\n", "(Answer 476(Added 123((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 21))NewTip))\n", "(Answer 476 Completed)\n", "(Answer 477 Ack)\n", "(Feedback((doc_id 0)(span_id 123)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 122)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 123)(route 0)(contents(Message(level Warning)(loc())(pp(Pp_glue((Pp_string Adding)(Pp_print_break 1 0)(Pp_string and)(Pp_print_break 1 0)(Pp_string removing)(Pp_print_break 1 0)(Pp_string hints)(Pp_print_break 1 0)(Pp_string in)(Pp_print_break 1 0)(Pp_string the)(Pp_print_break 1 0)(Pp_string core)(Pp_print_break 1 0)(Pp_string database)(Pp_print_break 1 0)(Pp_string implicitly)(Pp_print_break 1 0)(Pp_string is)(Pp_print_break 1 0)(Pp_string deprecated.)(Pp_print_break 1 0)(Pp_string Please)(Pp_print_break 1 0)(Pp_string specify)(Pp_print_break 1 0)(Pp_string a)(Pp_print_break 1 0)(Pp_string hint)(Pp_print_break 1 0)(Pp_string database.)(Pp_print_break 1 0)(Pp_string\"[implicit-core-hint-db,deprecated]\"))))(str\"Adding and removing hints in the core database implicitly is deprecated.\\nPlease specify a hint database. [implicit-core-hint-db,deprecated]\")))))\n", "(Feedback((doc_id 0)(span_id 123)(route 0)(contents Processed)))\n", "(Answer 477 Completed)\n", "(Answer 478 Ack)\n", "(Answer 478(ObjList()))\n", "(Answer 478 Completed)\n", "(Answer 479 Ack)\n", "(Answer 479(ObjList()))\n", "(Answer 479 Completed)\n", "(Answer 480 Ack)\n", "(Answer 480(Added 124((fname ToplevelInput)(line_nb 2)(bol_pos 1)(line_nb_last 2)(bol_pos_last 1)(bp 1)(ep 32))NewTip))\n", "(Answer 480 Completed)\n", "(Answer 481 Ack)\n", "(Feedback((doc_id 0)(span_id 124)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 123)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 124)(route 0)(contents Processed)))\n", "(Answer 481 Completed)\n", "(Answer 482 Ack)\n", "(Answer 482(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nParallelogram\"))))\n", "(Answer 482 Completed)\n", "(Answer 483 Ack)\n", "(Answer 483(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nParallelogram\"))))\n", "(Answer 483 Completed)\n", "(Answer 484 Ack)\n", "(Answer 484(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nParallelogram\"))))\n", "(Answer 484 Completed)\n", "(Answer 485 Ack)\n", "(Answer 485(Added 125((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 11))NewTip))\n", "(Answer 485 Completed)\n", "(Answer 486 Ack)\n", "(Feedback((doc_id 0)(span_id 125)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 124)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 125)(route 0)(contents(Message(level Notice)(loc())(pp(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal))))))(str ?Goal)))))\n", "(Feedback((doc_id 0)(span_id 125)(route 0)(contents Processed)))\n", "(Answer 486 Completed)\n", "(Answer 487 Ack)\n", "(Answer 487(Added 126((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 6))NewTip))\n", "(Answer 487 Completed)\n", "(Answer 488 Ack)\n", "(Feedback((doc_id 0)(span_id 126)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 125)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 126)(route 0)(contents Processed)))\n", "(Answer 488 Completed)\n", "(Answer 489 Ack)\n", "(Answer 489(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nParallelogram\"))))\n", "(Answer 489 Completed)\n", "(Answer 490 Ack)\n", "(Answer 490(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nParallelogram\"))))\n", "(Answer 490 Completed)\n", "(Answer 491 Ack)\n", "(Answer 491(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nParallelogram\"))))\n", "(Answer 491 Completed)\n", "(Answer 492 Ack)\n", "(Answer 492(Added 127((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 11))NewTip))\n", "(Answer 492 Completed)\n", "(Answer 493 Ack)\n", "(Feedback((doc_id 0)(span_id 127)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 126)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 127)(route 0)(contents(Message(level Notice)(loc())(pp(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal))))))(str ?Goal)))))\n", "(Feedback((doc_id 0)(span_id 127)(route 0)(contents Processed)))\n", "(Answer 493 Completed)\n", "(Answer 494 Ack)\n", "(Answer 494(Added 128((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 26))NewTip))\n", "(Answer 494 Completed)\n", "(Answer 495 Ack)\n", "(Feedback((doc_id 0)(span_id 128)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 127)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 128)(route 0)(contents Processed)))\n", "(Answer 495 Completed)\n", "(Answer 496 Ack)\n", "(Answer 496(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\norigin S3 = origin S1 /\\\\\\n                             extremity S3 = origin S2\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\norigin S4 = extremity S1 /\\\\\\n                             extremity S4 = extremity S2\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S1) (ln S2)\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S3) (ln S4)\"))))\n", "(Answer 496 Completed)\n", "(Answer 497 Ack)\n", "(Answer 497(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\norigin S3 = origin S1 /\\\\\\n                             extremity S3 = origin S2\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\norigin S4 = extremity S1 /\\\\\\n                             extremity S4 = extremity S2\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S1) (ln S2)\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S3) (ln S4)\"))))\n", "(Answer 497 Completed)\n", "(Answer 498 Ack)\n", "(Answer 498(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\norigin S3 = origin S1 /\\\\\\n                             extremity S3 = origin S2\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\norigin S4 = extremity S1 /\\\\\\n                             extremity S4 = extremity S2\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S1) (ln S2)\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S3) (ln S4)\"))))\n", "(Answer 498 Completed)\n", "(Answer 499 Ack)\n", "(Answer 499(Added 129((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 11))NewTip))\n", "(Answer 499 Completed)\n", "(Answer 500 Ack)\n", "(Feedback((doc_id 0)(span_id 129)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 128)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 129)(route 0)(contents(Message(level Notice)(loc())(pp(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side1))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S1)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side2))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S2)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side3))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S3)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side4))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S4)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string connect1))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string connect2))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal0))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string parsides_i))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal1))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string parsides_ii))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal2))))))))(Pp_string\" |}\")))))(str\"{|\\nside1 := S1;\\nside2 := S2;\\nside3 := S3;\\nside4 := S4;\\nconnect1 := ?Goal;\\nconnect2 := ?Goal0;\\nparsides_i := ?Goal1;\\nparsides_ii := ?Goal2 |}\")))))\n", "(Feedback((doc_id 0)(span_id 129)(route 0)(contents Processed)))\n", "(Answer 500 Completed)\n", "(Answer 501 Ack)\n", "(Answer 501(Added 130((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 26))NewTip))\n", "(Answer 501 Completed)\n", "(Answer 502 Ack)\n", "(Feedback((doc_id 0)(span_id 130)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 129)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 130)(route 0)(contents Processed)))\n", "(Answer 502 Completed)\n", "(Answer 503 Ack)\n", "(Answer 503(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\norigin (reverse (Side1 t)) =\\n                             origin (base t) /\\\\\\n                             extremity (reverse (Side1 t)) =\\n                             origin\\n                               {|\\n                               origin := C;\\n                               extremity := D;\\n                               Seg_cond := lemma7 |}\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\norigin S4 = extremity S1 /\\\\\\n                             extremity S4 = extremity S2\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S1) (ln S2)\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S3) (ln S4)\"))))\n", "(Answer 503 Completed)\n", "(Answer 504 Ack)\n", "(Answer 504(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\norigin (reverse (Side1 t)) =\\n                             origin (base t) /\\\\\\n                             extremity (reverse (Side1 t)) =\\n                             origin\\n                               {|\\n                               origin := C;\\n                               extremity := D;\\n                               Seg_cond := lemma7 |}\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\norigin S4 = extremity S1 /\\\\\\n                             extremity S4 = extremity S2\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S1) (ln S2)\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S3) (ln S4)\"))))\n", "(Answer 504 Completed)\n", "(Answer 505 Ack)\n", "(Answer 505(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\norigin (reverse (Side1 t)) =\\n                             origin (base t) /\\\\\\n                             extremity (reverse (Side1 t)) =\\n                             origin\\n                               {|\\n                               origin := C;\\n                               extremity := D;\\n                               Seg_cond := lemma7 |}\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\norigin S4 = extremity S1 /\\\\\\n                             extremity S4 = extremity S2\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S1) (ln S2)\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S3) (ln S4)\"))))\n", "(Answer 505 Completed)\n", "(Answer 506 Ack)\n", "(Answer 506(Added 131((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 11))NewTip))\n", "(Answer 506 Completed)\n", "(Answer 507 Ack)\n", "(Feedback((doc_id 0)(span_id 131)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 130)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 131)(route 0)(contents(Message(level Notice)(loc())(pp(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side1))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S1)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side2))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S2)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side3))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S3)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side4))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S4)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string connect1))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal2))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string connect2))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string parsides_i))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal0))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string parsides_ii))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal1))))))))(Pp_string\" |}\")))))(str\"{|\\nside1 := S1;\\nside2 := S2;\\nside3 := S3;\\nside4 := S4;\\nconnect1 := ?Goal2;\\nconnect2 := ?Goal;\\nparsides_i := ?Goal0;\\nparsides_ii := ?Goal1 |}\")))))\n", "(Feedback((doc_id 0)(span_id 131)(route 0)(contents Processed)))\n", "(Answer 507 Completed)\n", "(Answer 508 Ack)\n", "(Answer 508(Added 132((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 31))NewTip))\n", "(Answer 508 Completed)\n", "(Answer 509 Ack)\n", "(Feedback((doc_id 0)(span_id 132)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 131)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 132)(route 0)(contents Processed)))\n", "(Answer 509 Completed)\n", "(Answer 510 Ack)\n", "(Answer 510(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nextremity (Side1 t) = origin (base t) /\\\\\\n                             extremity (reverse (Side1 t)) =\\n                             origin\\n                               {|\\n                               origin := C;\\n                               extremity := D;\\n                               Seg_cond := lemma7 |}\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\norigin S4 = extremity S1 /\\\\\\n                             extremity S4 = extremity S2\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S1) (ln S2)\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S3) (ln S4)\"))))\n", "(Answer 510 Completed)\n", "(Answer 511 Ack)\n", "(Answer 511(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nextremity (Side1 t) = origin (base t) /\\\\\\n                             extremity (reverse (Side1 t)) =\\n                             origin\\n                               {|\\n                               origin := C;\\n                               extremity := D;\\n                               Seg_cond := lemma7 |}\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\norigin S4 = extremity S1 /\\\\\\n                             extremity S4 = extremity S2\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S1) (ln S2)\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S3) (ln S4)\"))))\n", "(Answer 511 Completed)\n", "(Answer 512 Ack)\n", "(Answer 512(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nextremity (Side1 t) = origin (base t) /\\\\\\n                             extremity (reverse (Side1 t)) =\\n                             origin\\n                               {|\\n                               origin := C;\\n                               extremity := D;\\n                               Seg_cond := lemma7 |}\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\norigin S4 = extremity S1 /\\\\\\n                             extremity S4 = extremity S2\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S1) (ln S2)\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S3) (ln S4)\"))))\n", "(Answer 512 Completed)\n", "(Answer 513 Ack)\n", "(Answer 513(Added 133((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 11))NewTip))\n", "(Answer 513 Completed)\n", "(Answer 514 Ack)\n", "(Feedback((doc_id 0)(span_id 133)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 132)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 133)(route 0)(contents(Message(level Notice)(loc())(pp(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side1))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S1)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side2))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S2)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side3))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S3)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side4))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S4)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string connect1))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string D)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string Seg_cond))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma7)))))(Pp_string\" |}\"))))))))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal2)))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ext_rev))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string connect2))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string parsides_i))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal0))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string parsides_ii))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal1))))))))(Pp_string\" |}\")))))(str\"{|\\nside1 := S1;\\nside2 := S2;\\nside3 := S3;\\nside4 := S4;\\nconnect1 := eq_ind (extremity (Side1 t))\\n              (fun p : Point =>\\n               p = origin (base t) /\\\\\\n               extremity (reverse (Side1 t)) =\\n               origin {| origin := C; extremity := D; Seg_cond := lemma7 |})\\n              ?Goal2 (origin (reverse (Side1 t))) \\n              (ext_rev (Side1 t));\\nconnect2 := ?Goal;\\nparsides_i := ?Goal0;\\nparsides_ii := ?Goal1 |}\")))))\n", "(Feedback((doc_id 0)(span_id 133)(route 0)(contents Processed)))\n", "(Answer 514 Completed)\n", "(Answer 515 Ack)\n", "(Answer 515(Added 134((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 21))NewTip))\n", "(Answer 515 Completed)\n", "(Answer 516 Ack)\n", "(Feedback((doc_id 0)(span_id 134)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 133)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 134)(route 0)(contents Processed)))\n", "(Answer 516 Completed)\n", "(Answer 517 Ack)\n", "(Answer 517(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\norigin (base t) = origin (base t) /\\\\\\n                             extremity (reverse (Side1 t)) =\\n                             origin\\n                               {|\\n                               origin := C;\\n                               extremity := D;\\n                               Seg_cond := lemma7 |}\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\norigin S4 = extremity S1 /\\\\\\n                             extremity S4 = extremity S2\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S1) (ln S2)\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S3) (ln S4)\"))))\n", "(Answer 517 Completed)\n", "(Answer 518 Ack)\n", "(Answer 518(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\norigin (base t) = origin (base t) /\\\\\\n                             extremity (reverse (Side1 t)) =\\n                             origin\\n                               {|\\n                               origin := C;\\n                               extremity := D;\\n                               Seg_cond := lemma7 |}\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\norigin S4 = extremity S1 /\\\\\\n                             extremity S4 = extremity S2\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S1) (ln S2)\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S3) (ln S4)\"))))\n", "(Answer 518 Completed)\n", "(Answer 519 Ack)\n", "(Answer 519(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\norigin (base t) = origin (base t) /\\\\\\n                             extremity (reverse (Side1 t)) =\\n                             origin\\n                               {|\\n                               origin := C;\\n                               extremity := D;\\n                               Seg_cond := lemma7 |}\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\norigin S4 = extremity S1 /\\\\\\n                             extremity S4 = extremity S2\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S1) (ln S2)\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S3) (ln S4)\"))))\n", "(Answer 519 Completed)\n", "(Answer 520 Ack)\n", "(Answer 520(Added 135((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 11))NewTip))\n", "(Answer 520 Completed)\n", "(Answer 521 Ack)\n", "(Feedback((doc_id 0)(span_id 135)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 134)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 135)(route 0)(contents(Message(level Notice)(loc())(pp(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side1))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S1)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side2))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S2)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side3))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S3)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side4))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S4)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string connect1))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string D)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string Seg_cond))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma7)))))(Pp_string\" |}\"))))))))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string D)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string Seg_cond))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma7)))))(Pp_string\" |}\"))))))))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal2)))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string auxs1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ext_rev))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string connect2))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string parsides_i))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal0))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string parsides_ii))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal1))))))))(Pp_string\" |}\")))))(str\"{|\\nside1 := S1;\\nside2 := S2;\\nside3 := S3;\\nside4 := S4;\\nconnect1 := eq_ind (extremity (Side1 t))\\n              (fun p : Point =>\\n               p = origin (base t) /\\\\\\n               extremity (reverse (Side1 t)) =\\n               origin {| origin := C; extremity := D; Seg_cond := lemma7 |})\\n              (eq_ind (origin (base t))\\n                 (fun p : Point =>\\n                  p = origin (base t) /\\\\\\n                  extremity (reverse (Side1 t)) =\\n                  origin\\n                    {| origin := C; extremity := D; Seg_cond := lemma7 |})\\n                 ?Goal2 (extremity (Side1 t)) (auxs1 t))\\n              (origin (reverse (Side1 t))) (ext_rev (Side1 t));\\nconnect2 := ?Goal;\\nparsides_i := ?Goal0;\\nparsides_ii := ?Goal1 |}\")))))\n", "(Feedback((doc_id 0)(span_id 135)(route 0)(contents Processed)))\n", "(Answer 521 Completed)\n", "(Answer 522 Ack)\n", "(Answer 522(Added 136((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 32))NewTip))\n", "(Answer 522 Completed)\n", "(Answer 523 Ack)\n", "(Feedback((doc_id 0)(span_id 136)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 135)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 136)(route 0)(contents Processed)))\n", "(Answer 523 Completed)\n", "(Answer 524 Ack)\n", "(Answer 524(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\norigin (base t) = origin (base t) /\\\\\\n                             origin (Side1 t) =\\n                             origin\\n                               {|\\n                               origin := C;\\n                               extremity := D;\\n                               Seg_cond := lemma7 |}\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\norigin S4 = extremity S1 /\\\\\\n                             extremity S4 = extremity S2\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S1) (ln S2)\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S3) (ln S4)\"))))\n", "(Answer 524 Completed)\n", "(Answer 525 Ack)\n", "(Answer 525(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\norigin (base t) = origin (base t) /\\\\\\n                             origin (Side1 t) =\\n                             origin\\n                               {|\\n                               origin := C;\\n                               extremity := D;\\n                               Seg_cond := lemma7 |}\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\norigin S4 = extremity S1 /\\\\\\n                             extremity S4 = extremity S2\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S1) (ln S2)\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S3) (ln S4)\"))))\n", "(Answer 525 Completed)\n", "(Answer 526 Ack)\n", "(Answer 526(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\norigin (base t) = origin (base t) /\\\\\\n                             origin (Side1 t) =\\n                             origin\\n                               {|\\n                               origin := C;\\n                               extremity := D;\\n                               Seg_cond := lemma7 |}\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\norigin S4 = extremity S1 /\\\\\\n                             extremity S4 = extremity S2\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S1) (ln S2)\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S3) (ln S4)\"))))\n", "(Answer 526 Completed)\n", "(Answer 527 Ack)\n", "(Answer 527(Added 137((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 11))NewTip))\n", "(Answer 527 Completed)\n", "(Answer 528 Ack)\n", "(Feedback((doc_id 0)(span_id 137)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 136)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 137)(route 0)(contents(Message(level Notice)(loc())(pp(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side1))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S1)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side2))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S2)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side3))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S3)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side4))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S4)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string connect1))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string D)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string Seg_cond))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma7)))))(Pp_string\" |}\"))))))))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string D)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string Seg_cond))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma7)))))(Pp_string\" |}\"))))))))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string D)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string Seg_cond))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma7)))))(Pp_string\" |}\"))))))))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal2)))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string orig_rev))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string auxs1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ext_rev))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string connect2))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string parsides_i))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal0))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string parsides_ii))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal1))))))))(Pp_string\" |}\")))))(str\"{|\\nside1 := S1;\\nside2 := S2;\\nside3 := S3;\\nside4 := S4;\\nconnect1 := eq_ind (extremity (Side1 t))\\n              (fun p : Point =>\\n               p = origin (base t) /\\\\\\n               extremity (reverse (Side1 t)) =\\n               origin {| origin := C; extremity := D; Seg_cond := lemma7 |})\\n              (eq_ind (origin (base t))\\n                 (fun p : Point =>\\n                  p = origin (base t) /\\\\\\n                  extremity (reverse (Side1 t)) =\\n                  origin\\n                    {| origin := C; extremity := D; Seg_cond := lemma7 |})\\n                 (eq_ind (origin (Side1 t))\\n                    (fun p : Point =>\\n                     origin (base t) = origin (base t) /\\\\\\n                     p =\\n                     origin\\n                       {| origin := C; extremity := D; Seg_cond := lemma7 |})\\n                    ?Goal2 (extremity (reverse (Side1 t)))\\n                    (orig_rev (Side1 t))) (extremity (Side1 t)) \\n                 (auxs1 t)) (origin (reverse (Side1 t))) \\n              (ext_rev (Side1 t));\\nconnect2 := ?Goal;\\nparsides_i := ?Goal0;\\nparsides_ii := ?Goal1 |}\")))))\n", "(Feedback((doc_id 0)(span_id 137)(route 0)(contents Processed)))\n", "(Answer 528 Completed)\n", "(Answer 529 Ack)\n", "(Answer 529(Added 138((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 14))NewTip))\n", "(Answer 529 Completed)\n", "(Answer 530 Ack)\n", "(Feedback((doc_id 0)(span_id 138)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 137)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 138)(route 0)(contents Processed)))\n", "(Answer 530 Completed)\n", "(Answer 531 Ack)\n", "(Answer 531(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\norigin (base t) = origin (base t) /\\\\\\n                             origin (Side1 t) = C\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\norigin S4 = extremity S1 /\\\\\\n                             extremity S4 = extremity S2\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S1) (ln S2)\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S3) (ln S4)\"))))\n", "(Answer 531 Completed)\n", "(Answer 532 Ack)\n", "(Answer 532(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\norigin (base t) = origin (base t) /\\\\\\n                             origin (Side1 t) = C\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\norigin S4 = extremity S1 /\\\\\\n                             extremity S4 = extremity S2\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S1) (ln S2)\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S3) (ln S4)\"))))\n", "(Answer 532 Completed)\n", "(Answer 533 Ack)\n", "(Answer 533(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\norigin (base t) = origin (base t) /\\\\\\n                             origin (Side1 t) = C\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\norigin S4 = extremity S1 /\\\\\\n                             extremity S4 = extremity S2\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S1) (ln S2)\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S3) (ln S4)\"))))\n", "(Answer 533 Completed)\n", "(Answer 534 Ack)\n", "(Answer 534(Added 139((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 11))NewTip))\n", "(Answer 534 Completed)\n", "(Answer 535 Ack)\n", "(Feedback((doc_id 0)(span_id 139)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 138)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 139)(route 0)(contents(Message(level Notice)(loc())(pp(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side1))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S1)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side2))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S2)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side3))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S3)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side4))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S4)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string connect1))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string D)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string Seg_cond))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma7)))))(Pp_string\" |}\"))))))))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string D)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string Seg_cond))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma7)))))(Pp_string\" |}\"))))))))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string D)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string Seg_cond))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma7)))))(Pp_string\" |}\"))))))))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal2)))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string orig_rev))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string auxs1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ext_rev))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string connect2))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string parsides_i))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal0))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string parsides_ii))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal1))))))))(Pp_string\" |}\")))))(str\"{|\\nside1 := S1;\\nside2 := S2;\\nside3 := S3;\\nside4 := S4;\\nconnect1 := eq_ind (extremity (Side1 t))\\n              (fun p : Point =>\\n               p = origin (base t) /\\\\\\n               extremity (reverse (Side1 t)) =\\n               origin {| origin := C; extremity := D; Seg_cond := lemma7 |})\\n              (eq_ind (origin (base t))\\n                 (fun p : Point =>\\n                  p = origin (base t) /\\\\\\n                  extremity (reverse (Side1 t)) =\\n                  origin\\n                    {| origin := C; extremity := D; Seg_cond := lemma7 |})\\n                 (eq_ind (origin (Side1 t))\\n                    (fun p : Point =>\\n                     origin (base t) = origin (base t) /\\\\\\n                     p =\\n                     origin\\n                       {| origin := C; extremity := D; Seg_cond := lemma7 |})\\n                    ?Goal2 (extremity (reverse (Side1 t)))\\n                    (orig_rev (Side1 t))) (extremity (Side1 t)) \\n                 (auxs1 t)) (origin (reverse (Side1 t))) \\n              (ext_rev (Side1 t));\\nconnect2 := ?Goal;\\nparsides_i := ?Goal0;\\nparsides_ii := ?Goal1 |}\")))))\n", "(Feedback((doc_id 0)(span_id 139)(route 0)(contents Processed)))\n", "(Answer 535 Completed)\n", "(Answer 536 Ack)\n", "(Answer 536(Added 140((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 21))NewTip))\n", "(Answer 536 Completed)\n", "(Answer 537 Ack)\n", "(Feedback((doc_id 0)(span_id 140)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 139)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 140)(route 0)(contents Processed)))\n", "(Answer 537 Completed)\n", "(Answer 538 Ack)\n", "(Answer 538(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\norigin (base t) = origin (base t) /\\\\\\n                             summit t = C\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\norigin S4 = extremity S1 /\\\\\\n                             extremity S4 = extremity S2\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S1) (ln S2)\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S3) (ln S4)\"))))\n", "(Answer 538 Completed)\n", "(Answer 539 Ack)\n", "(Answer 539(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\norigin (base t) = origin (base t) /\\\\\\n                             summit t = C\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\norigin S4 = extremity S1 /\\\\\\n                             extremity S4 = extremity S2\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S1) (ln S2)\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S3) (ln S4)\"))))\n", "(Answer 539 Completed)\n", "(Answer 540 Ack)\n", "(Answer 540(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\norigin (base t) = origin (base t) /\\\\\\n                             summit t = C\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\norigin S4 = extremity S1 /\\\\\\n                             extremity S4 = extremity S2\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S1) (ln S2)\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S3) (ln S4)\"))))\n", "(Answer 540 Completed)\n", "(Answer 541 Ack)\n", "(Answer 541(Added 141((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 11))NewTip))\n", "(Answer 541 Completed)\n", "(Answer 542 Ack)\n", "(Feedback((doc_id 0)(span_id 141)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 140)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 141)(route 0)(contents(Message(level Notice)(loc())(pp(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side1))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S1)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side2))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S2)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side3))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S3)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side4))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S4)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string connect1))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string D)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string Seg_cond))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma7)))))(Pp_string\" |}\"))))))))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string D)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string Seg_cond))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma7)))))(Pp_string\" |}\"))))))))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string D)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string Seg_cond))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma7)))))(Pp_string\" |}\"))))))))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string summit))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal2)))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string auxs3))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string orig_rev))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string auxs1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ext_rev))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string connect2))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string parsides_i))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal0))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string parsides_ii))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal1))))))))(Pp_string\" |}\")))))(str\"{|\\nside1 := S1;\\nside2 := S2;\\nside3 := S3;\\nside4 := S4;\\nconnect1 := eq_ind (extremity (Side1 t))\\n              (fun p : Point =>\\n               p = origin (base t) /\\\\\\n               extremity (reverse (Side1 t)) =\\n               origin {| origin := C; extremity := D; Seg_cond := lemma7 |})\\n              (eq_ind (origin (base t))\\n                 (fun p : Point =>\\n                  p = origin (base t) /\\\\\\n                  extremity (reverse (Side1 t)) =\\n                  origin\\n                    {| origin := C; extremity := D; Seg_cond := lemma7 |})\\n                 (eq_ind (origin (Side1 t))\\n                    (fun p : Point =>\\n                     origin (base t) = origin (base t) /\\\\\\n                     p =\\n                     origin\\n                       {| origin := C; extremity := D; Seg_cond := lemma7 |})\\n                    (eq_ind (summit t)\\n                       (fun p : Point =>\\n                        origin (base t) = origin (base t) /\\\\ p = C) \\n                       ?Goal2 (origin (Side1 t)) (auxs3 t))\\n                    (extremity (reverse (Side1 t))) \\n                    (orig_rev (Side1 t))) (extremity (Side1 t)) \\n                 (auxs1 t)) (origin (reverse (Side1 t))) \\n              (ext_rev (Side1 t));\\nconnect2 := ?Goal;\\nparsides_i := ?Goal0;\\nparsides_ii := ?Goal1 |}\")))))\n", "(Feedback((doc_id 0)(span_id 141)(route 0)(contents Processed)))\n", "(Answer 542 Completed)\n", "(Answer 543 Ack)\n", "(Answer 543(Added 142((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 23))NewTip))\n", "(Answer 543 Completed)\n", "(Answer 544 Ack)\n", "(Feedback((doc_id 0)(span_id 142)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 141)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 142)(route 0)(contents Processed)))\n", "(Answer 544 Completed)\n", "(Answer 545 Ack)\n", "(Answer 545(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\norigin S4 = extremity S1 /\\\\\\n                             extremity S4 = extremity S2\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S1) (ln S2)\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S3) (ln S4)\"))))\n", "(Answer 545 Completed)\n", "(Answer 546 Ack)\n", "(Answer 546(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\norigin S4 = extremity S1 /\\\\\\n                             extremity S4 = extremity S2\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S1) (ln S2)\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S3) (ln S4)\"))))\n", "(Answer 546 Completed)\n", "(Answer 547 Ack)\n", "(Answer 547(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\norigin S4 = extremity S1 /\\\\\\n                             extremity S4 = extremity S2\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S1) (ln S2)\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S3) (ln S4)\"))))\n", "(Answer 547 Completed)\n", "(Answer 548 Ack)\n", "(Answer 548(Added 143((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 11))NewTip))\n", "(Answer 548 Completed)\n", "(Answer 549 Ack)\n", "(Feedback((doc_id 0)(span_id 143)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 142)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 143)(route 0)(contents(Message(level Notice)(loc())(pp(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side1))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S1)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side2))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S2)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side3))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S3)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side4))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S4)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string connect1))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string D)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string Seg_cond))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma7)))))(Pp_string\" |}\"))))))))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string D)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string Seg_cond))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma7)))))(Pp_string\" |}\"))))))))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string D)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string Seg_cond))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma7)))))(Pp_string\" |}\"))))))))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string summit))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string conj))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string eq_refl))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string eq_refl)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string auxs3))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string orig_rev))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string auxs1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ext_rev))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string connect2))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string parsides_i))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal0))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string parsides_ii))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal1))))))))(Pp_string\" |}\")))))(str\"{|\\nside1 := S1;\\nside2 := S2;\\nside3 := S3;\\nside4 := S4;\\nconnect1 := eq_ind (extremity (Side1 t))\\n              (fun p : Point =>\\n               p = origin (base t) /\\\\\\n               extremity (reverse (Side1 t)) =\\n               origin {| origin := C; extremity := D; Seg_cond := lemma7 |})\\n              (eq_ind (origin (base t))\\n                 (fun p : Point =>\\n                  p = origin (base t) /\\\\\\n                  extremity (reverse (Side1 t)) =\\n                  origin\\n                    {| origin := C; extremity := D; Seg_cond := lemma7 |})\\n                 (eq_ind (origin (Side1 t))\\n                    (fun p : Point =>\\n                     origin (base t) = origin (base t) /\\\\\\n                     p =\\n                     origin\\n                       {| origin := C; extremity := D; Seg_cond := lemma7 |})\\n                    (eq_ind (summit t)\\n                       (fun p : Point =>\\n                        origin (base t) = origin (base t) /\\\\ p = C)\\n                       (conj eq_refl eq_refl) (origin (Side1 t)) \\n                       (auxs3 t)) (extremity (reverse (Side1 t)))\\n                    (orig_rev (Side1 t))) (extremity (Side1 t)) \\n                 (auxs1 t)) (origin (reverse (Side1 t))) \\n              (ext_rev (Side1 t));\\nconnect2 := ?Goal;\\nparsides_i := ?Goal0;\\nparsides_ii := ?Goal1 |}\")))))\n", "(Feedback((doc_id 0)(span_id 143)(route 0)(contents Processed)))\n", "(Answer 549 Completed)\n", "(Answer 550 Ack)\n", "(Answer 550(Added 144((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 50))NewTip))\n", "(Answer 550 Completed)\n", "(Answer 551 Ack)\n", "(Feedback((doc_id 0)(span_id 144)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 143)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 144)(route 0)(contents Processed)))\n", "(Answer 551 Completed)\n", "(Answer 552 Ack)\n", "(Answer 552(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S1) (ln S2)\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S3) (ln S4)\"))))\n", "(Answer 552 Completed)\n", "(Answer 553 Ack)\n", "(Answer 553(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S1) (ln S2)\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S3) (ln S4)\"))))\n", "(Answer 553 Completed)\n", "(Answer 554 Ack)\n", "(Answer 554(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S1) (ln S2)\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S3) (ln S4)\"))))\n", "(Answer 554 Completed)\n", "(Answer 555 Ack)\n", "(Answer 555(Added 145((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 11))NewTip))\n", "(Answer 555 Completed)\n", "(Answer 556 Ack)\n", "(Feedback((doc_id 0)(span_id 145)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 144)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 145)(route 0)(contents(Message(level Notice)(loc())(pp(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side1))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S1)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side2))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S2)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side3))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S3)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side4))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S4)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string connect1))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string D)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string Seg_cond))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma7)))))(Pp_string\" |}\"))))))))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string D)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string Seg_cond))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma7)))))(Pp_string\" |}\"))))))))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string D)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string Seg_cond))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma7)))))(Pp_string\" |}\"))))))))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string summit))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string conj))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string eq_refl))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string eq_refl)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string auxs3))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string orig_rev))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string auxs1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ext_rev))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string connect2))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string conj))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string eq_refl))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string eq_refl))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string parsides_i))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string parsides_ii))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal0))))))))(Pp_string\" |}\")))))(str\"{|\\nside1 := S1;\\nside2 := S2;\\nside3 := S3;\\nside4 := S4;\\nconnect1 := eq_ind (extremity (Side1 t))\\n              (fun p : Point =>\\n               p = origin (base t) /\\\\\\n               extremity (reverse (Side1 t)) =\\n               origin {| origin := C; extremity := D; Seg_cond := lemma7 |})\\n              (eq_ind (origin (base t))\\n                 (fun p : Point =>\\n                  p = origin (base t) /\\\\\\n                  extremity (reverse (Side1 t)) =\\n                  origin\\n                    {| origin := C; extremity := D; Seg_cond := lemma7 |})\\n                 (eq_ind (origin (Side1 t))\\n                    (fun p : Point =>\\n                     origin (base t) = origin (base t) /\\\\\\n                     p =\\n                     origin\\n                       {| origin := C; extremity := D; Seg_cond := lemma7 |})\\n                    (eq_ind (summit t)\\n                       (fun p : Point =>\\n                        origin (base t) = origin (base t) /\\\\ p = C)\\n                       (conj eq_refl eq_refl) (origin (Side1 t)) \\n                       (auxs3 t)) (extremity (reverse (Side1 t)))\\n                    (orig_rev (Side1 t))) (extremity (Side1 t)) \\n                 (auxs1 t)) (origin (reverse (Side1 t))) \\n              (ext_rev (Side1 t));\\nconnect2 := conj eq_refl eq_refl;\\nparsides_i := ?Goal;\\nparsides_ii := ?Goal0 |}\")))))\n", "(Feedback((doc_id 0)(span_id 145)(route 0)(contents Processed)))\n", "(Answer 556 Completed)\n", "(Answer 557 Ack)\n", "(Answer 557(Added 146((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 42))NewTip))\n", "(Answer 557 Completed)\n", "(Answer 558 Ack)\n", "(Feedback((doc_id 0)(span_id 146)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 145)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 146)(route 0)(contents Processed)))\n", "(Answer 558 Completed)\n", "(Answer 559 Ack)\n", "(Answer 559(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S1) L3\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S3) (ln S4)\"))))\n", "(Answer 559 Completed)\n", "(Answer 560 Ack)\n", "(Answer 560(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S1) L3\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S3) (ln S4)\"))))\n", "(Answer 560 Completed)\n", "(Answer 561 Ack)\n", "(Answer 561(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S1) L3\\n\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S3) (ln S4)\"))))\n", "(Answer 561 Completed)\n", "(Answer 562 Ack)\n", "(Answer 562(Added 147((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 11))NewTip))\n", "(Answer 562 Completed)\n", "(Answer 563 Ack)\n", "(Feedback((doc_id 0)(span_id 147)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 146)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 147)(route 0)(contents(Message(level Notice)(loc())(pp(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side1))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S1)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side2))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S2)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side3))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S3)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side4))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S4)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string connect1))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string D)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string Seg_cond))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma7)))))(Pp_string\" |}\"))))))))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string D)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string Seg_cond))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma7)))))(Pp_string\" |}\"))))))))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string D)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string Seg_cond))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma7)))))(Pp_string\" |}\"))))))))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string summit))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string conj))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string eq_refl))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string eq_refl)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string auxs3))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string orig_rev))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string auxs1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ext_rev))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string connect2))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string conj))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string eq_refl))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string eq_refl))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string parsides_i))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string cong_eqln_spar))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ln))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S1)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string L3))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ln))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S2)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal0)))))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma10))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string parsides_ii))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal))))))))(Pp_string\" |}\")))))(str\"{|\\nside1 := S1;\\nside2 := S2;\\nside3 := S3;\\nside4 := S4;\\nconnect1 := eq_ind (extremity (Side1 t))\\n              (fun p : Point =>\\n               p = origin (base t) /\\\\\\n               extremity (reverse (Side1 t)) =\\n               origin {| origin := C; extremity := D; Seg_cond := lemma7 |})\\n              (eq_ind (origin (base t))\\n                 (fun p : Point =>\\n                  p = origin (base t) /\\\\\\n                  extremity (reverse (Side1 t)) =\\n                  origin\\n                    {| origin := C; extremity := D; Seg_cond := lemma7 |})\\n                 (eq_ind (origin (Side1 t))\\n                    (fun p : Point =>\\n                     origin (base t) = origin (base t) /\\\\\\n                     p =\\n                     origin\\n                       {| origin := C; extremity := D; Seg_cond := lemma7 |})\\n                    (eq_ind (summit t)\\n                       (fun p : Point =>\\n                        origin (base t) = origin (base t) /\\\\ p = C)\\n                       (conj eq_refl eq_refl) (origin (Side1 t)) \\n                       (auxs3 t)) (extremity (reverse (Side1 t)))\\n                    (orig_rev (Side1 t))) (extremity (Side1 t)) \\n                 (auxs1 t)) (origin (reverse (Side1 t))) \\n              (ext_rev (Side1 t));\\nconnect2 := conj eq_refl eq_refl;\\nparsides_i := cong_eqln_spar (ln S1) L3 (ln S2) ?Goal0 lemma10;\\nparsides_ii := ?Goal |}\")))))\n", "(Feedback((doc_id 0)(span_id 147)(route 0)(contents Processed)))\n", "(Answer 563 Completed)\n", "(Answer 564 Ack)\n", "(Answer 564(Added 148((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 37))NewTip))\n", "(Answer 564 Completed)\n", "(Answer 565 Ack)\n", "(Feedback((doc_id 0)(span_id 148)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 147)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 148)(route 0)(contents Processed)))\n", "(Answer 565 Completed)\n", "(Answer 566 Ack)\n", "(Answer 566(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S3) (ln S4)\"))))\n", "(Answer 566 Completed)\n", "(Answer 567 Ack)\n", "(Answer 567(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S3) (ln S4)\"))))\n", "(Answer 567 Completed)\n", "(Answer 568 Ack)\n", "(Answer 568(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S3) (ln S4)\"))))\n", "(Answer 568 Completed)\n", "(Answer 569 Ack)\n", "(Answer 569(Added 149((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 11))NewTip))\n", "(Answer 569 Completed)\n", "(Answer 570 Ack)\n", "(Feedback((doc_id 0)(span_id 149)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 148)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 149)(route 0)(contents(Message(level Notice)(loc())(pp(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side1))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S1)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side2))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S2)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side3))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S3)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side4))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S4)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string connect1))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string D)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string Seg_cond))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma7)))))(Pp_string\" |}\"))))))))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string D)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string Seg_cond))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma7)))))(Pp_string\" |}\"))))))))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string D)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string Seg_cond))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma7)))))(Pp_string\" |}\"))))))))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string summit))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string conj))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string eq_refl))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string eq_refl)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string auxs3))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string orig_rev))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string auxs1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ext_rev))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string connect2))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string conj))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string eq_refl))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string eq_refl))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string parsides_i))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string cong_eqln_spar))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ln))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S1)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string L3))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ln))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S2)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string spar))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string summit))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ln))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Triangle_def))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma10))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string parsides_ii))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal))))))))(Pp_string\" |}\")))))(str\"{|\\nside1 := S1;\\nside2 := S2;\\nside3 := S3;\\nside4 := S4;\\nconnect1 := eq_ind (extremity (Side1 t))\\n              (fun p : Point =>\\n               p = origin (base t) /\\\\\\n               extremity (reverse (Side1 t)) =\\n               origin {| origin := C; extremity := D; Seg_cond := lemma7 |})\\n              (eq_ind (origin (base t))\\n                 (fun p : Point =>\\n                  p = origin (base t) /\\\\\\n                  extremity (reverse (Side1 t)) =\\n                  origin\\n                    {| origin := C; extremity := D; Seg_cond := lemma7 |})\\n                 (eq_ind (origin (Side1 t))\\n                    (fun p : Point =>\\n                     origin (base t) = origin (base t) /\\\\\\n                     p =\\n                     origin\\n                       {| origin := C; extremity := D; Seg_cond := lemma7 |})\\n                    (eq_ind (summit t)\\n                       (fun p : Point =>\\n                        origin (base t) = origin (base t) /\\\\ p = C)\\n                       (conj eq_refl eq_refl) (origin (Side1 t)) \\n                       (auxs3 t)) (extremity (reverse (Side1 t)))\\n                    (orig_rev (Side1 t))) (extremity (Side1 t)) \\n                 (auxs1 t)) (origin (reverse (Side1 t))) \\n              (ext_rev (Side1 t));\\nconnect2 := conj eq_refl eq_refl;\\nparsides_i := cong_eqln_spar (ln S1) L3 (ln S2)\\n                (spar (summit t) (ln (base t)) (Triangle_def t)) lemma10;\\nparsides_ii := ?Goal |}\")))))\n", "(Feedback((doc_id 0)(span_id 149)(route 0)(contents Processed)))\n", "(Answer 570 Completed)\n", "(Answer 571 Ack)\n", "(Answer 571(Added 150((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 42))NewTip))\n", "(Answer 571 Completed)\n", "(Answer 572 Ack)\n", "(Feedback((doc_id 0)(span_id 150)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 149)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 150)(route 0)(contents Processed)))\n", "(Answer 572 Completed)\n", "(Answer 573 Ack)\n", "(Answer 573(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S3) L4\"))))\n", "(Answer 573 Completed)\n", "(Answer 574 Ack)\n", "(Answer 574(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S3) L4\"))))\n", "(Answer 574 Completed)\n", "(Answer 575 Ack)\n", "(Answer 575(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S3) L4\"))))\n", "(Answer 575 Completed)\n", "(Answer 576 Ack)\n", "(Answer 576(Added 151((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 11))NewTip))\n", "(Answer 576 Completed)\n", "(Answer 577 Ack)\n", "(Feedback((doc_id 0)(span_id 151)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 150)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 151)(route 0)(contents(Message(level Notice)(loc())(pp(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side1))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S1)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side2))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S2)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side3))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S3)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side4))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S4)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string connect1))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string D)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string Seg_cond))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma7)))))(Pp_string\" |}\"))))))))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string D)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string Seg_cond))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma7)))))(Pp_string\" |}\"))))))))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string D)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string Seg_cond))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma7)))))(Pp_string\" |}\"))))))))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string summit))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string conj))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string eq_refl))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string eq_refl)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string auxs3))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string orig_rev))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string auxs1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ext_rev))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string connect2))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string conj))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string eq_refl))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string eq_refl))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string parsides_i))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string cong_eqln_spar))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ln))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S1)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string L3))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ln))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S2)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string spar))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string summit))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ln))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Triangle_def))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma10))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string parsides_ii))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string cong_eqln_spar))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ln))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S3)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string L4))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ln))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S4)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal)))))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma11))))))))(Pp_string\" |}\")))))(str\"{|\\nside1 := S1;\\nside2 := S2;\\nside3 := S3;\\nside4 := S4;\\nconnect1 := eq_ind (extremity (Side1 t))\\n              (fun p : Point =>\\n               p = origin (base t) /\\\\\\n               extremity (reverse (Side1 t)) =\\n               origin {| origin := C; extremity := D; Seg_cond := lemma7 |})\\n              (eq_ind (origin (base t))\\n                 (fun p : Point =>\\n                  p = origin (base t) /\\\\\\n                  extremity (reverse (Side1 t)) =\\n                  origin\\n                    {| origin := C; extremity := D; Seg_cond := lemma7 |})\\n                 (eq_ind (origin (Side1 t))\\n                    (fun p : Point =>\\n                     origin (base t) = origin (base t) /\\\\\\n                     p =\\n                     origin\\n                       {| origin := C; extremity := D; Seg_cond := lemma7 |})\\n                    (eq_ind (summit t)\\n                       (fun p : Point =>\\n                        origin (base t) = origin (base t) /\\\\ p = C)\\n                       (conj eq_refl eq_refl) (origin (Side1 t)) \\n                       (auxs3 t)) (extremity (reverse (Side1 t)))\\n                    (orig_rev (Side1 t))) (extremity (Side1 t)) \\n                 (auxs1 t)) (origin (reverse (Side1 t))) \\n              (ext_rev (Side1 t));\\nconnect2 := conj eq_refl eq_refl;\\nparsides_i := cong_eqln_spar (ln S1) L3 (ln S2)\\n                (spar (summit t) (ln (base t)) (Triangle_def t)) lemma10;\\nparsides_ii := cong_eqln_spar (ln S3) L4 (ln S4) ?Goal lemma11 |}\")))))\n", "(Feedback((doc_id 0)(span_id 151)(route 0)(contents Processed)))\n", "(Answer 577 Completed)\n", "(Answer 578 Ack)\n", "(Answer 578(Added 152((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 18))NewTip))\n", "(Answer 578 Completed)\n", "(Answer 579 Ack)\n", "(Feedback((doc_id 0)(span_id 152)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 151)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 152)(route 0)(contents Processed)))\n", "(Answer 579 Completed)\n", "(Answer 580 Ack)\n", "(Answer 580(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S3) (par L1 B)\"))))\n", "(Answer 580 Completed)\n", "(Answer 581 Ack)\n", "(Answer 581(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S3) (par L1 B)\"))))\n", "(Answer 581 Completed)\n", "(Answer 582 Ack)\n", "(Answer 582(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (ln S3) (par L1 B)\"))))\n", "(Answer 582 Completed)\n", "(Answer 583 Ack)\n", "(Answer 583(Added 153((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 11))NewTip))\n", "(Answer 583 Completed)\n", "(Answer 584 Ack)\n", "(Feedback((doc_id 0)(span_id 153)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 152)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 153)(route 0)(contents(Message(level Notice)(loc())(pp(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side1))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S1)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side2))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S2)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side3))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S3)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side4))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S4)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string connect1))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string D)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string Seg_cond))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma7)))))(Pp_string\" |}\"))))))))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string D)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string Seg_cond))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma7)))))(Pp_string\" |}\"))))))))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string D)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string Seg_cond))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma7)))))(Pp_string\" |}\"))))))))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string summit))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string conj))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string eq_refl))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string eq_refl)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string auxs3))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string orig_rev))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string auxs1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ext_rev))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string connect2))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string conj))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string eq_refl))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string eq_refl))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string parsides_i))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string cong_eqln_spar))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ln))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S1)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string L3))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ln))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S2)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string spar))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string summit))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ln))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Triangle_def))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma10))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string parsides_ii))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string cong_eqln_spar))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ln))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S3)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string L4))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ln))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S4)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal)))))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma11))))))))(Pp_string\" |}\")))))(str\"{|\\nside1 := S1;\\nside2 := S2;\\nside3 := S3;\\nside4 := S4;\\nconnect1 := eq_ind (extremity (Side1 t))\\n              (fun p : Point =>\\n               p = origin (base t) /\\\\\\n               extremity (reverse (Side1 t)) =\\n               origin {| origin := C; extremity := D; Seg_cond := lemma7 |})\\n              (eq_ind (origin (base t))\\n                 (fun p : Point =>\\n                  p = origin (base t) /\\\\\\n                  extremity (reverse (Side1 t)) =\\n                  origin\\n                    {| origin := C; extremity := D; Seg_cond := lemma7 |})\\n                 (eq_ind (origin (Side1 t))\\n                    (fun p : Point =>\\n                     origin (base t) = origin (base t) /\\\\\\n                     p =\\n                     origin\\n                       {| origin := C; extremity := D; Seg_cond := lemma7 |})\\n                    (eq_ind (summit t)\\n                       (fun p : Point =>\\n                        origin (base t) = origin (base t) /\\\\ p = C)\\n                       (conj eq_refl eq_refl) (origin (Side1 t)) \\n                       (auxs3 t)) (extremity (reverse (Side1 t)))\\n                    (orig_rev (Side1 t))) (extremity (Side1 t)) \\n                 (auxs1 t)) (origin (reverse (Side1 t))) \\n              (ext_rev (Side1 t));\\nconnect2 := conj eq_refl eq_refl;\\nparsides_i := cong_eqln_spar (ln S1) L3 (ln S2)\\n                (spar (summit t) (ln (base t)) (Triangle_def t)) lemma10;\\nparsides_ii := cong_eqln_spar (ln S3) L4 (ln S4) ?Goal lemma11 |}\")))))\n", "(Feedback((doc_id 0)(span_id 153)(route 0)(contents Processed)))\n", "(Answer 584 Completed)\n", "(Answer 585 Ack)\n", "(Answer 585(Added 154((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 15))NewTip))\n", "(Answer 585 Completed)\n", "(Answer 586 Ack)\n", "(Feedback((doc_id 0)(span_id 154)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 153)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 154)(route 0)(contents Processed)))\n", "(Answer 586 Completed)\n", "(Answer 587 Ack)\n", "(Answer 587(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (par L1 B) (ln S3)\"))))\n", "(Answer 587 Completed)\n", "(Answer 588 Ack)\n", "(Answer 588(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (par L1 B) (ln S3)\"))))\n", "(Answer 588 Completed)\n", "(Answer 589 Ack)\n", "(Answer 589(ObjList((CoqString\"\\n  lemma11 : EqLn L4 (ln S4)\\n  lemma10 : EqLn L3 (ln S2)\\n  lemma9 : EqLn L1 (ln (reverse (Side1 t)))\\n  S4 := {| origin := B; extremity := D; Seg_cond := lemma8 |} : Segment\\n  S2 := {| origin := C; extremity := D; Seg_cond := lemma7 |} : Segment\\n  S3 := reverse (Side1 t) : Segment\\n  S1 := base t : Segment\\n  lemma8 : DiPt B D\\n  lemma7 : DiPt C D\\n  lemma6 : Apart C L4\\n  lemma5 : Apart B L3\\n  D := pt {| line1 := L3; line2 := L4; Twol_cond := lemma4 |} : Point\\n  lemma4 : ConLn L3 L4\\n  lemma3 : ConLn L1 L3\\n  lemma2' : DiLn L1 L4\\n  lemma5' : Apart B L1\\n  lemma2 : DiLn Base L3\\n  lemma1 : ConLn Base L1\\n  L4 := par L1 B : Line\\n  L3 := par Base C : Line\\n  L2 := ln (Side2 t) : Line\\n  L1 := ln (Side1 t) : Line\\n  Base := ln (base t) : Line\\n  B := extremity (base t) : Point\\n  A := origin (base t) : Point\\n  C := summit t : Point\\n  t : Triangle\\n============================\\nSPar (par L1 B) (ln S3)\"))))\n", "(Answer 589 Completed)\n", "(Answer 590 Ack)\n", "(Answer 590(Added 155((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 11))NewTip))\n", "(Answer 590 Completed)\n", "(Answer 591 Ack)\n", "(Feedback((doc_id 0)(span_id 155)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 154)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 155)(route 0)(contents(Message(level Notice)(loc())(pp(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side1))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S1)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side2))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S2)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side3))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S3)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side4))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S4)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string connect1))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string D)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string Seg_cond))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma7)))))(Pp_string\" |}\"))))))))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string D)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string Seg_cond))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma7)))))(Pp_string\" |}\"))))))))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string D)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string Seg_cond))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma7)))))(Pp_string\" |}\"))))))))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string summit))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string conj))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string eq_refl))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string eq_refl)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string auxs3))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string orig_rev))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string auxs1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ext_rev))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string connect2))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string conj))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string eq_refl))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string eq_refl))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string parsides_i))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string cong_eqln_spar))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ln))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S1)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string L3))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ln))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S2)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string spar))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string summit))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ln))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Triangle_def))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma10))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string parsides_ii))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string cong_eqln_spar))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ln))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S3)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string L4))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ln))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S4)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string sym_SPar))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string par))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string L1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string B)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ln))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S3)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_tag constr.evar(Pp_glue((Pp_string ?Goal))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma11))))))))(Pp_string\" |}\")))))(str\"{|\\nside1 := S1;\\nside2 := S2;\\nside3 := S3;\\nside4 := S4;\\nconnect1 := eq_ind (extremity (Side1 t))\\n              (fun p : Point =>\\n               p = origin (base t) /\\\\\\n               extremity (reverse (Side1 t)) =\\n               origin {| origin := C; extremity := D; Seg_cond := lemma7 |})\\n              (eq_ind (origin (base t))\\n                 (fun p : Point =>\\n                  p = origin (base t) /\\\\\\n                  extremity (reverse (Side1 t)) =\\n                  origin\\n                    {| origin := C; extremity := D; Seg_cond := lemma7 |})\\n                 (eq_ind (origin (Side1 t))\\n                    (fun p : Point =>\\n                     origin (base t) = origin (base t) /\\\\\\n                     p =\\n                     origin\\n                       {| origin := C; extremity := D; Seg_cond := lemma7 |})\\n                    (eq_ind (summit t)\\n                       (fun p : Point =>\\n                        origin (base t) = origin (base t) /\\\\ p = C)\\n                       (conj eq_refl eq_refl) (origin (Side1 t)) \\n                       (auxs3 t)) (extremity (reverse (Side1 t)))\\n                    (orig_rev (Side1 t))) (extremity (Side1 t)) \\n                 (auxs1 t)) (origin (reverse (Side1 t))) \\n              (ext_rev (Side1 t));\\nconnect2 := conj eq_refl eq_refl;\\nparsides_i := cong_eqln_spar (ln S1) L3 (ln S2)\\n                (spar (summit t) (ln (base t)) (Triangle_def t)) lemma10;\\nparsides_ii := cong_eqln_spar (ln S3) L4 (ln S4)\\n                 (sym_SPar (par L1 B) (ln S3) ?Goal) lemma11 |}\")))))\n", "(Feedback((doc_id 0)(span_id 155)(route 0)(contents Processed)))\n", "(Answer 591 Completed)\n", "(Answer 592 Ack)\n", "(Answer 592(Added 156((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 42))NewTip))\n", "(Answer 592 Completed)\n", "(Answer 593 Ack)\n", "(Feedback((doc_id 0)(span_id 156)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 155)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 156)(route 0)(contents Processed)))\n", "(Answer 593 Completed)\n", "(Answer 594 Ack)\n", "(Answer 594(ObjList((CoqString\"\"))))\n", "(Answer 594 Completed)\n", "(Answer 595 Ack)\n", "(Answer 595(ObjList((CoqString\"\"))))\n", "(Answer 595 Completed)\n", "(Answer 596 Ack)\n", "(Answer 596(ObjList((CoqString\"\"))))\n", "(Answer 596 Completed)\n", "(Answer 597 Ack)\n", "(Answer 597(Added 157((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 11))NewTip))\n", "(Answer 597 Completed)\n", "(Answer 598 Ack)\n", "(Feedback((doc_id 0)(span_id 157)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 156)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 157)(route 0)(contents(Message(level Notice)(loc())(pp(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side1))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S1)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side2))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S2)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side3))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S3)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string side4))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S4)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string connect1))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string D)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string Seg_cond))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma7)))))(Pp_string\" |}\"))))))))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string D)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string Seg_cond))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma7)))))(Pp_string\" |}\"))))))))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hvbox 0)(Pp_glue((Pp_string {|)(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string D)))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string Seg_cond))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma7)))))(Pp_string\" |}\"))))))))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string eq_ind))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string summit))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.keyword(Pp_string fun))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"p : \")(Pp_tag constr.variable(Pp_string Point))))))))(Pp_print_break 1 0)(Pp_string =>)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 0)(Pp_glue((Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))))))))(Pp_tag constr.notation(Pp_string\" /\\\\\"))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 0)(Pp_glue((Pp_tag constr.variable(Pp_string p))(Pp_tag constr.notation(Pp_string\" =\"))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string C)))))))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string conj))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string eq_refl))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string eq_refl)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string auxs3))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string orig_rev))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string extremity))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string auxs1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string origin))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string reverse))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ext_rev))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Side1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string connect2))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string conj))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string eq_refl))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string eq_refl))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string parsides_i))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string cong_eqln_spar))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ln))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S1)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string L3))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ln))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S2)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string spar))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string summit))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ln))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string base))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string Triangle_def))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string t)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma10))))))))(Pp_string\";\")(Pp_print_break 1 0)(Pp_box(Pp_hbox 1)(Pp_glue((Pp_tag constr.variable(Pp_string parsides_ii))(Pp_print_break 1 0)(Pp_string :=)(Pp_print_break 1 0)(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string cong_eqln_spar))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ln))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S3)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string L4))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ln))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S4)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string sym_SPar))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string par))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string L1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string B)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ln))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S3)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string cong_eqln_spar))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string par))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string L1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string B)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string L1))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string ln))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string S3)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string sym_SPar))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string L1))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string par))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string L1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string B)))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_box(Pp_hovbox 1)(Pp_glue((Pp_string\"(\")(Pp_box(Pp_hovbox 2)(Pp_glue((Pp_tag constr.variable(Pp_string spar))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string B))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string L1))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string\"lemma5'\")))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma9)))))(Pp_string\")\")))))))(Pp_string\")\"))))(Pp_print_break 1 0)(Pp_tag constr.variable(Pp_string lemma11))))))))(Pp_string\" |}\")))))(str\"{|\\nside1 := S1;\\nside2 := S2;\\nside3 := S3;\\nside4 := S4;\\nconnect1 := eq_ind (extremity (Side1 t))\\n              (fun p : Point =>\\n               p = origin (base t) /\\\\\\n               extremity (reverse (Side1 t)) =\\n               origin {| origin := C; extremity := D; Seg_cond := lemma7 |})\\n              (eq_ind (origin (base t))\\n                 (fun p : Point =>\\n                  p = origin (base t) /\\\\\\n                  extremity (reverse (Side1 t)) =\\n                  origin\\n                    {| origin := C; extremity := D; Seg_cond := lemma7 |})\\n                 (eq_ind (origin (Side1 t))\\n                    (fun p : Point =>\\n                     origin (base t) = origin (base t) /\\\\\\n                     p =\\n                     origin\\n                       {| origin := C; extremity := D; Seg_cond := lemma7 |})\\n                    (eq_ind (summit t)\\n                       (fun p : Point =>\\n                        origin (base t) = origin (base t) /\\\\ p = C)\\n                       (conj eq_refl eq_refl) (origin (Side1 t)) \\n                       (auxs3 t)) (extremity (reverse (Side1 t)))\\n                    (orig_rev (Side1 t))) (extremity (Side1 t)) \\n                 (auxs1 t)) (origin (reverse (Side1 t))) \\n              (ext_rev (Side1 t));\\nconnect2 := conj eq_refl eq_refl;\\nparsides_i := cong_eqln_spar (ln S1) L3 (ln S2)\\n                (spar (summit t) (ln (base t)) (Triangle_def t)) lemma10;\\nparsides_ii := cong_eqln_spar (ln S3) L4 (ln S4)\\n                 (sym_SPar (par L1 B) (ln S3)\\n                    (cong_eqln_spar (par L1 B) L1 \\n                       (ln S3) (sym_SPar L1 (par L1 B) (spar B L1 lemma5'))\\n                       lemma9)) lemma11 |}\")))))\n", "(Feedback((doc_id 0)(span_id 157)(route 0)(contents Processed)))\n", "(Answer 598 Completed)\n", "(Answer 599 Ack)\n", "(Answer 599(Added 158((fname ToplevelInput)(line_nb 1)(bol_pos 0)(line_nb_last 1)(bol_pos_last 0)(bp 0)(ep 4))NewTip))\n", "(Answer 599 Completed)\n", "(Answer 600 Ack)\n", "(Feedback((doc_id 0)(span_id 158)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 157)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 124)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 158)(route 0)(contents Processed)))\n", "(Answer 600 Completed)\n", "(Answer 601 Ack)\n", "(Answer 601(ObjList()))\n", "(Answer 601 Completed)\n", "(Answer 602 Ack)\n", "(Answer 602(ObjList()))\n", "(Answer 602 Completed)\n", "(Answer 603 Ack)\n", "(Feedback((doc_id 0)(span_id 159)(route 0)(contents(ProcessingIn master))))\n", "(Feedback((doc_id 0)(span_id 158)(route 0)(contents Processed)))\n", "(Feedback((doc_id 0)(span_id 159)(route 0)(contents Processed)))\n", "(Answer 603(Added 159((fname ToplevelInput)(line_nb 2)(bol_pos 1)(line_nb_last 2)(bol_pos_last 1)(bp 1)(ep 21))NewTip))\n", "(Answer 603 Completed)\n", "(Answer 604 Ack)\n", "(Feedback((doc_id 0)(span_id 159)(route 0)(contents Processed)))\n", "(Answer 604 Completed)\n", "(Answer 605 Ack)\n", "(Answer 605(ObjList()))\n", "(Answer 605 Completed)\n", "(Answer 606 Ack)\n", "(Answer 606(ObjList()))\n", "(Answer 606 Completed)\n", "(Answer EOF Ack)\n", "(Answer EOF Completed)\n"], "sent": ["(Add () \"(* Contribution to the Coq Library   V6.3 (July 1999)                    *)\n\n(****************************************************************************)\n(*                                                                          *)\n(*                          Constructive Geometry                           *)\n(*                             according to                                 *)\n(*                            Jan von Plato                                 *)\n(*                                                                          *)\n(*                               Coq V5.10                                  *)\n(*\t\t\t\t\t\t\t\t\t    *)\n(*\t\t\t        Gilles Kahn \t\t\t\t    *)\n(*\t\t\t\t   INRIA                                    *)\n(*\t\t              Sophia-Antipolis\t\t \t            *)\n(*\t\t\t\t\t\t\t\t\t    *)\n(*                                                                          *)\n(* Acknowledgments: This work started in Turin in May 95 with Yves Bertot.  *)\n(* Thanks to the Newton Institute for providing an exceptional work         *)\n(* environment in Summer 1995 so that I could complete this.                *)\n(****************************************************************************)\n\n\n(****************************************************************************)\n(*      \t\t\tproblems.v                                  *)\n(****************************************************************************)\nRequire Import basis.\n\")", "(Exec 2)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Require Import part1.\n\")", "(Exec 3)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Require Import part2.\n\")", "(Exec 4)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Require Import part3.\n\")", "(Exec 5)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Require Import affinity.\n\")", "(Exec 6)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Require Import orthogonality.\n\")", "(Exec 7)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"\nTheorem pb9_1 :\n forall (a : Point) (l : Line), ex (fun b : Point => Incident b l).\n\")", "(Exec 8)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Show Proof.\")", "(Exec 9)", "(Add () \"Proof.\n\")", "(Exec 10)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Show Proof.\")", "(Exec 11)", "(Add () \"intros a l.\n\")", "(Exec 12)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Show Proof.\")", "(Exec 13)", "(Add () \"generalize (O3_i l a); intro H'.\n\")", "(Exec 14)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Show Proof.\")", "(Exec 15)", "(Add () \"elim (O1 (ort l a) l); intro H'2.\n\")", "(Exec 16)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Show Proof.\")", "(Exec 17)", "(Add () \"exists (pt (Twol (ort l a) l H'2)).\n\")", "(Exec 18)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Show Proof.\")", "(Exec 19)", "(Add () \"exact (inc_pt2 (Twol (ort l a) l H'2)).\n\")", "(Exec 20)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Show Proof.\")", "(Exec 21)", "(Add () \"elim H'; auto.\n\")", "(Exec 22)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Show Proof.\")", "(Exec 23)", "(Add () \"Qed.\n\")", "(Exec 24)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"\nSection construction9_2.\n\")", "(Exec 25)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Variable t : Triangle.\n\")", "(Exec 26)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"\nLet C : Point := summit t.\n\")", "(Exec 27)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"\nLet A : Point := origin (base t).\n\")", "(Exec 28)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"\nLet B : Point := extremity (base t).\n\")", "(Exec 29)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"\nLet Base : Line := ln (base t).\n\")", "(Exec 30)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"\nLet L1 : Line := ln (Side1 t).\n\")", "(Exec 31)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"\nLet L2 : Line := ln (Side2 t).\n\")", "(Exec 32)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"\nLet L3 : Line := par Base C.\n\")", "(Exec 33)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"\nLet L4 : Line := par L1 B.\n\")", "(Exec 34)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"\nLet lemma1 : ConLn Base L1.\n\")", "(Exec 35)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Proof.\n\")", "(Exec 36)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"unfold Base, L1 in |- *.\n\")", "(Exec 37)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"apply DiLn_qimp_con; auto.\n\")", "(Exec 38)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"exists (origin (base t)); split; auto.\n\")", "(Exec 39)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"rewrite (auxs1 t); auto.\n\")", "(Exec 40)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Qed.\n\")", "(Exec 41)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Hint Resolve lemma1.\n\")", "(Exec 42)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"\nLet lemma2 : DiLn Base L3.\n\")", "(Exec 43)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Proof.\n\")", "(Exec 44)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"unfold L3, Base, C in |- *; auto.\n\")", "(Exec 45)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Qed.\n\")", "(Exec 46)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Hint Resolve lemma2.\n\")", "(Exec 47)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"\nLet lemma5' : Apart B L1.\n\")", "(Exec 48)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Proof.\n\")", "(Exec 49)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"unfold B, L1 in |- *.\n\")", "(Exec 50)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"apply cong_eqln_apt with (l := ln (reverse (Side1 t))); auto.\n\")", "(Exec 51)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Qed.\n\")", "(Exec 52)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Hint Resolve lemma5'.\n\")", "(Exec 53)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"\nLet lemma2' : DiLn L1 L4.\n\")", "(Exec 54)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Proof.\n\")", "(Exec 55)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"unfold L1, L4 in |- *; auto.\n\")", "(Exec 56)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Qed.\n\")", "(Exec 57)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Hint Resolve lemma2'.\n\")", "(Exec 58)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"\nLet lemma3 : ConLn L1 L3.\n\")", "(Exec 59)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Proof.\n\")", "(Exec 60)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"unfold L3 at 1 in |- *.\n\")", "(Exec 61)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"apply cong_par_con with (m := Base); auto.\n\")", "(Exec 62)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Qed.\n\")", "(Exec 63)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Hint Resolve lemma3.\n\")", "(Exec 64)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"\nLet lemma4 : ConLn L3 L4.\n\")", "(Exec 65)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Proof.\n\")", "(Exec 66)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"unfold L4 at 1 in |- *.\n\")", "(Exec 67)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"apply cong_par_con with (m := L1); auto.\n\")", "(Exec 68)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Qed.\n\")", "(Exec 69)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Hint Resolve lemma4.\n\")", "(Exec 70)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"\nLet D : Point := pt (Twol L3 L4 lemma4).\n\")", "(Exec 71)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"\nLet lemma5 : Apart B L3.\n\")", "(Exec 72)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Proof.\n\")", "(Exec 73)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"lapply (constructive_uniqueness_for_parallels Base L3 B);\n [ intro H'2; elim H'2;\n    [ intro H'3; elim H'3; [ intro H'4; clear H'3 H'2 | trivial ]\n    | intro H'3; clear H'2 ]\n | idtac ]; auto.\n\")", "(Exec 74)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"unfold B, Base in H'4.\n\")", "(Exec 75)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"elim (inc_ln2 (base t)); auto.\n\")", "(Exec 76)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"unfold L3 in H'3.\n\")", "(Exec 77)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"elim (Ax1_i Base C); auto.\n\")", "(Exec 78)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Qed.\n\")", "(Exec 79)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Hint Resolve lemma5.\n\")", "(Exec 80)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"\nLet lemma6 : Apart C L4.\n\")", "(Exec 81)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Proof.\n\")", "(Exec 82)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"lapply (constructive_uniqueness_for_parallels L1 L4 C);\n [ intro H'4; elim H'4;\n    [ intro H'5; elim H'5; [ intro H'6; clear H'5 H'4 | trivial ]\n    | intro H'5; clear H'4 ]\n | idtac ]; auto.\n\")", "(Exec 83)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"unfold C, L1 in H'6.\n\")", "(Exec 84)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"generalize H'6; rewrite (auxs3 t); intro H'.\n\")", "(Exec 85)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"elim (inc_ln1 (Side1 t)); auto.\n\")", "(Exec 86)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"elim (Ax1_i L1 B); auto.\n\")", "(Exec 87)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Qed.\n\")", "(Exec 88)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Hint Resolve lemma6.\n\")", "(Exec 89)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"\nLet lemma7 : DiPt C D.\n\")", "(Exec 90)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Proof.\n\")", "(Exec 91)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"unfold D in |- *; auto.\n\")", "(Exec 92)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Qed.\n\")", "(Exec 93)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"\nLet lemma8 : DiPt B D.\n\")", "(Exec 94)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Proof.\n\")", "(Exec 95)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"unfold D in |- *; auto.\n\")", "(Exec 96)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Qed.\n\")", "(Exec 97)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Hint Resolve lemma7 lemma8.\n\")", "(Exec 98)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"\nLet S1 : Segment := base t.\n\")", "(Exec 99)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"\nLet S3 : Segment := reverse (Side1 t).\n\")", "(Exec 100)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"\nLet S2 : Segment := Seg C D lemma7.\n\")", "(Exec 101)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"\nLet S4 : Segment := Seg B D lemma8.\n\")", "(Exec 102)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"\nLet lemma9 : EqLn L1 (ln (reverse (Side1 t))).\n\")", "(Exec 103)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Proof.\n\")", "(Exec 104)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"unfold L1 at 1 in |- *; auto.\n\")", "(Exec 105)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Qed.\n\")", "(Exec 106)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Hint Resolve lemma9.\n\")", "(Exec 107)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"\nLet lemma10 : EqLn L3 (ln S2).\n\")", "(Exec 108)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Proof.\n\")", "(Exec 109)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"apply Uniqueness_of_constructed_lines.\n\")", "(Exec 110)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"unfold S2, L1, L3 in |- *; simpl in |- *; auto.\n\")", "(Exec 111)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"unfold L3, S2, D in |- *; simpl in |- *.\n\")", "(Exec 112)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"exact (inc_pt1 (Twol L3 L4 lemma4)).\n\")", "(Exec 113)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Qed.\n\")", "(Exec 114)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Hint Resolve lemma10.\n\")", "(Exec 115)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"\nLet lemma11 : EqLn L4 (ln S4).\n\")", "(Exec 116)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Proof.\n\")", "(Exec 117)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"apply Uniqueness_of_constructed_lines.\n\")", "(Exec 118)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"unfold S4, L4 in |- *; simpl in |- *; auto.\n\")", "(Exec 119)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"unfold S4, D in |- *; simpl in |- *.\n\")", "(Exec 120)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"exact (inc_pt2 (Twol L3 L4 lemma4)).\n\")", "(Exec 121)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Qed.\n\")", "(Exec 122)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Hint Resolve lemma11.\n\")", "(Exec 123)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"\nTheorem thm9_2 : Parallelogram.\n\")", "(Exec 124)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Show Proof.\")", "(Exec 125)", "(Add () \"Proof.\n\")", "(Exec 126)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Show Proof.\")", "(Exec 127)", "(Add () \"apply (Pgram S1 S2 S3 S4).\n\")", "(Exec 128)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Show Proof.\")", "(Exec 129)", "(Add () \"unfold S1, S2, S3 in |- *.\n\")", "(Exec 130)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Show Proof.\")", "(Exec 131)", "(Add () \"rewrite <- (ext_rev (Side1 t)).\n\")", "(Exec 132)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Show Proof.\")", "(Exec 133)", "(Add () \"rewrite <- (auxs1 t).\n\")", "(Exec 134)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Show Proof.\")", "(Exec 135)", "(Add () \"rewrite <- (orig_rev (Side1 t)).\n\")", "(Exec 136)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Show Proof.\")", "(Exec 137)", "(Add () \"simpl in |- *.\n\")", "(Exec 138)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Show Proof.\")", "(Exec 139)", "(Add () \"rewrite <- (auxs3 t).\n\")", "(Exec 140)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Show Proof.\")", "(Exec 141)", "(Add () \"unfold C in |- *; auto.\n\")", "(Exec 142)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Show Proof.\")", "(Exec 143)", "(Add () \"unfold S1, S2, S4, B in |- *; simpl in |- *; auto.\n\")", "(Exec 144)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Show Proof.\")", "(Exec 145)", "(Add () \"apply cong_eqln_spar with (m := L3); auto.\n\")", "(Exec 146)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Show Proof.\")", "(Exec 147)", "(Add () \"unfold L3, S1, Base, C in |- *; auto.\n\")", "(Exec 148)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Show Proof.\")", "(Exec 149)", "(Add () \"apply cong_eqln_spar with (m := L4); auto.\n\")", "(Exec 150)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Show Proof.\")", "(Exec 151)", "(Add () \"unfold L4 in |- *.\n\")", "(Exec 152)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Show Proof.\")", "(Exec 153)", "(Add () \"apply sym_SPar.\n\")", "(Exec 154)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Show Proof.\")", "(Exec 155)", "(Add () \"apply cong_eqln_spar with (m := L1); auto.\n\")", "(Exec 156)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"Show Proof.\")", "(Exec 157)", "(Add () \"Qed.\n\")", "(Exec 158)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Add () \"\nEnd construction9_2.\n\")", "(Exec 159)", "(Query ((pp ((pp_format PpStr)))) Goals)", "(Query ((pp ((pp_format PpStr)))) Goals)"], "stderr": []}